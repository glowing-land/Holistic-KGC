{
  "iri": "Paper-60",
  "title": "J82-3002",
  "authors": [],
  "keywords": [],
  "sections": [
    {
      "iri": "Paper-60-Section-1",
      "subtitle": "Abstract",
      "paragraphs": [
        {
          "iri": "Paper-60-Section-1-Paragraph-1",
          "sentences": [
            {
              "iri": "Paper-60-Section-1-Paragraph-1-Sentence-1",
              "text": "This paper gives an overall account of a prototype natural language question answering system , called Chat-80 ."
            },
            {
              "iri": "Paper-60-Section-1-Paragraph-1-Sentence-2",
              "text": "Chat-80 has been designed to be both efficient and easily adaptable to a variety of applications ."
            },
            {
              "iri": "Paper-60-Section-1-Paragraph-1-Sentence-3",
              "text": "The system is implemented entirely in Prolog , a programming language based on logic ."
            },
            {
              "iri": "Paper-60-Section-1-Paragraph-1-Sentence-4",
              "text": "With the aid of a logic-based grammar formalism called extraposition grammars , Chat-80 translates English questions into the Prolog subset of logic ."
            },
            {
              "iri": "Paper-60-Section-1-Paragraph-1-Sentence-5",
              "text": "The resulting logical expression is then transformed by a planning algorithm into efficient Prolog , cf. query optimisation in a relational database ."
            },
            {
              "iri": "Paper-60-Section-1-Paragraph-1-Sentence-6",
              "text": "Finally , the Prolog form is executed to yield the answer ."
            }
          ]
        }
      ]
    }
  ],
  "times": [
    0.0005373954772949219,
    15.226096153259277,
    23.565495491027832,
    20.05685830116272,
    0.013740062713623047,
    9.012222290039062e-05,
    0.0001266002655029297,
    21.453059911727905,
    28.840527772903442,
    0.9838829040527344,
    13.165103197097778,
    0.006172895431518555,
    0.00014352798461914062,
    26.617116451263428,
    1.1453959941864014,
    0.015756845474243164,
    1.0938448905944824,
    3.153533935546875,
    1.1051454544067383,
    1.0851247310638428,
    29.811761617660522,
    1.4860620498657227,
    14.099354028701782,
    0.9129006862640381,
    0.0004417896270751953,
    0.008301734924316406
  ],
  "nodes": {
    "Entity-chat-80": {
      "node_id": "chat-80",
      "disambiguation_index": 0,
      "label": "Chat-80",
      "aliases": [
        "Chat-80",
        "The system"
      ],
      "types": [
        "tool",
        "prototype",
        "system",
        "model",
        "chatbot"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A prototype natural language question answering system designed for efficient and adaptable applications.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-1",
          "local_name": "Chat-80",
          "local_types": [
            "chatbot",
            "prototype",
            "system"
          ],
          "iri": "Entity-chat-80-Mention-1"
        },
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-2",
          "local_name": "Chat-80",
          "local_types": [
            "tool",
            "chatbot",
            "system",
            "model"
          ],
          "iri": "Entity-chat-80-Mention-2"
        },
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-4",
          "local_name": "Chat-80",
          "local_types": [
            "tool",
            "chatbot",
            "system"
          ],
          "iri": "Entity-chat-80-Mention-3"
        },
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-3",
          "local_name": "The system",
          "local_types": [
            "system"
          ],
          "iri": "Entity-chat-80-Mention-4"
        }
      ],
      "relevance": 0.7744140625
    },
    "Entity-the_resulting_logical_expression": {
      "node_id": "the_resulting_logical_expression",
      "disambiguation_index": 0,
      "label": "The resulting logical expression",
      "aliases": [
        "The resulting logical expression"
      ],
      "types": [
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A logical representation of an English question translated into Prolog, generated by Chat-80's translation process.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-5",
          "local_name": "The resulting logical expression",
          "local_types": [
            "expression"
          ],
          "iri": "Entity-the_resulting_logical_expression-Mention-1"
        }
      ],
      "relevance": 0.7666015625
    },
    "Entity-this_paper": {
      "node_id": "this_paper",
      "disambiguation_index": 0,
      "label": "This paper",
      "aliases": [
        "This paper"
      ],
      "types": [
        "research",
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The research paper describing the design and implementation of a prototype natural language question answering system called Chat-80.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-1",
          "local_name": "This paper",
          "local_types": [
            "research",
            "paper"
          ],
          "iri": "Entity-this_paper-Mention-1"
        }
      ],
      "relevance": 0.7490234375
    },
    "Entity-a_prototype_natural_language_question_answering_system": {
      "node_id": "a_prototype_natural_language_question_answering_system",
      "disambiguation_index": 0,
      "label": "a prototype natural language question answering system",
      "aliases": [
        "a prototype natural language question answering system"
      ],
      "types": [
        "prototype",
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A software implementation of a natural language question answering system, designed as a proof-of-concept and demonstrated through the Chat-80 example.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-1",
          "local_name": "a prototype natural language question answering system",
          "local_types": [
            "prototype",
            "system"
          ],
          "iri": "Entity-a_prototype_natural_language_question_answering_system-Mention-1"
        }
      ],
      "relevance": 0.7490234375
    },
    "Entity-extraposition_grammar": {
      "node_id": "extraposition_grammar",
      "disambiguation_index": 0,
      "label": "extraposition grammars",
      "aliases": [
        "extraposition grammars"
      ],
      "types": [
        "theory",
        "logic-based grammar formalism",
        "natural language processing technique",
        "linguistic theory",
        "grammar formalism"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A logic-based grammar formalism used to translate English questions into a Prolog subset of logic.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-4",
          "local_name": "extraposition grammars",
          "local_types": [
            "theory",
            "logic-based grammar formalism",
            "natural language processing technique",
            "linguistic theory",
            "grammar formalism"
          ],
          "iri": "Entity-extraposition_grammar-Mention-1"
        }
      ],
      "relevance": 0.72265625
    },
    "Entity-english_question": {
      "node_id": "english_question",
      "disambiguation_index": 0,
      "label": "English questions",
      "aliases": [
        "English questions"
      ],
      "types": [
        "questions",
        "language",
        "data"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of question that can be translated from natural language to a logical expression in Prolog.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-4",
          "local_name": "English questions",
          "local_types": [
            "questions",
            "language",
            "data"
          ],
          "iri": "Entity-english_question-Mention-1"
        }
      ],
      "relevance": 0.69482421875
    },
    "Entity-a_planning_algorithm": {
      "node_id": "a_planning_algorithm",
      "disambiguation_index": 0,
      "label": "a planning algorithm",
      "aliases": [
        "a planning algorithm"
      ],
      "types": [
        "planning algorithm",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A software component responsible for transforming logical expressions into efficient Prolog code, analogous to query optimization in relational databases.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-5",
          "local_name": "a planning algorithm",
          "local_types": [
            "planning algorithm",
            "algorithm"
          ],
          "iri": "Entity-a_planning_algorithm-Mention-1"
        }
      ],
      "relevance": 0.65673828125
    },
    "Entity-natural_language_question_answering_system": {
      "node_id": "natural_language_question_answering_system",
      "disambiguation_index": 0,
      "label": "natural language question answering system",
      "aliases": [
        "natural language question answering system"
      ],
      "types": [
        "artificial intelligence application",
        "technology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A computer program designed to process and respond to human-generated questions using natural language processing techniques.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-1",
          "local_name": "natural language question answering system",
          "local_types": [
            "artificial intelligence application",
            "technology"
          ],
          "iri": "Entity-natural_language_question_answering_system-Mention-1"
        }
      ],
      "relevance": 0.64306640625
    },
    "Entity-a_variety_of_application": {
      "node_id": "a_variety_of_application",
      "disambiguation_index": 0,
      "label": "a variety of applications",
      "aliases": [
        "a variety of applications"
      ],
      "types": [
        "applications"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Different uses or domains for the Chat-80 natural language question answering system",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-2",
          "local_name": "a variety of applications",
          "local_types": [
            "applications"
          ],
          "iri": "Entity-a_variety_of_application-Mention-1"
        }
      ],
      "relevance": 0.64208984375
    },
    "Entity-query_optimisation_in_a_relational_database": {
      "node_id": "query_optimisation_in_a_relational_database",
      "disambiguation_index": 0,
      "label": "query optimisation in a relational database",
      "aliases": [
        "query optimisation in a relational database"
      ],
      "types": [
        "database optimization",
        "database management system",
        "database concept",
        "optimization technique"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A technique used to transform logical expressions into efficient Prolog code for querying and retrieving data from relational databases.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-5",
          "local_name": "query optimisation in a relational database",
          "local_types": [
            "database optimization",
            "database management system",
            "database concept",
            "optimization technique"
          ],
          "iri": "Entity-query_optimisation_in_a_relational_database-Mention-1"
        }
      ],
      "relevance": 0.64111328125
    },
    "Entity-prolog": {
      "node_id": "prolog",
      "disambiguation_index": 0,
      "label": "Prolog",
      "aliases": [
        "Prolog"
      ],
      "types": [
        "programming language",
        "technology",
        "artificial intelligence",
        "logic-based programming language"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A logic-based programming language",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-3",
          "local_name": "Prolog",
          "local_types": [
            "programming language",
            "logic-based programming language"
          ],
          "iri": "Entity-prolog-Mention-1"
        },
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-5",
          "local_name": "Prolog",
          "local_types": [
            "programming language",
            "technology",
            "artificial intelligence"
          ],
          "iri": "Entity-prolog-Mention-2"
        },
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-6",
          "local_name": "Prolog",
          "local_types": [
            "programming language"
          ],
          "iri": "Entity-prolog-Mention-3"
        }
      ],
      "relevance": 0.63623046875
    },
    "Entity-prolog_subset_of_logic": {
      "node_id": "prolog_subset_of_logic",
      "disambiguation_index": 0,
      "label": "Prolog subset of logic",
      "aliases": [
        "Prolog subset of logic",
        "the Prolog subset of logic"
      ],
      "types": [
        "field",
        "programming paradigm",
        "formal system",
        "programming language",
        "subset of logic",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A programming language and formal system that represents a subset of logical operations",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-4",
          "local_name": "Prolog subset of logic",
          "local_types": [
            "programming language",
            "formal system"
          ],
          "iri": "Entity-prolog_subset_of_logic-Mention-1"
        },
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-4",
          "local_name": "the Prolog subset of logic",
          "local_types": [
            "field",
            "programming paradigm",
            "programming language",
            "subset of logic",
            "logic"
          ],
          "iri": "Entity-prolog_subset_of_logic-Mention-2"
        }
      ],
      "relevance": 0.619140625
    },
    "Entity-the_prolog_form": {
      "node_id": "the_prolog_form",
      "disambiguation_index": 0,
      "label": "the Prolog form",
      "aliases": [
        "the Prolog form"
      ],
      "types": [
        "form"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The output of transforming a logical expression into efficient Prolog code, resulting in an executable query.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-6",
          "local_name": "the Prolog form",
          "local_types": [
            "form"
          ],
          "iri": "Entity-the_prolog_form-Mention-1"
        }
      ],
      "relevance": 0.61865234375
    },
    "Entity-answer": {
      "node_id": "answer",
      "disambiguation_index": 0,
      "label": "answer",
      "aliases": [
        "the answer",
        "answer"
      ],
      "types": [
        "result",
        "output",
        "answer"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The outcome or result of an inquiry, computation, or process.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-6",
          "local_name": "answer",
          "local_types": [
            "result",
            "output"
          ],
          "iri": "Entity-answer-Mention-1"
        },
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-6",
          "local_name": "the answer",
          "local_types": [
            "answer"
          ],
          "iri": "Entity-answer-Mention-2"
        }
      ],
      "relevance": 0.478759765625
    },
    "Entity-planning_algorithm": {
      "node_id": "planning_algorithm",
      "disambiguation_index": 0,
      "label": "planning algorithm",
      "aliases": [
        "planning algorithm"
      ],
      "types": [
        "computer science",
        "artificial intelligence technique",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or procedure used to generate and execute plans for achieving specific goals or objectives.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-5",
          "local_name": "planning algorithm",
          "local_types": [
            "computer science",
            "artificial intelligence technique",
            "algorithm"
          ],
          "iri": "Entity-planning_algorithm-Mention-1"
        }
      ],
      "relevance": 0.467041015625
    },
    "Entity-query_optimisation": {
      "node_id": "query_optimisation",
      "disambiguation_index": 0,
      "label": "query optimisation",
      "aliases": [
        "query optimisation"
      ],
      "types": [
        "database management"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of improving or modifying queries to increase their efficiency and effectiveness.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-5",
          "local_name": "query optimisation",
          "local_types": [
            "database management"
          ],
          "iri": "Entity-query_optimisation-Mention-1"
        }
      ],
      "relevance": 0.45947265625
    },
    "Entity-logical_expression": {
      "node_id": "logical_expression",
      "disambiguation_index": 0,
      "label": "logical expression",
      "aliases": [
        "logical expression"
      ],
      "types": [
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of a statement or formula that can be evaluated as true or false.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-5",
          "local_name": "logical expression",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-logical_expression-Mention-1"
        }
      ],
      "relevance": 0.4560546875
    },
    "Entity-system": {
      "node_id": "system",
      "disambiguation_index": 0,
      "label": "system",
      "aliases": [
        "system"
      ],
      "types": [
        "software system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software application or program that operates according to specific rules and procedures.",
      "mentions": [
        {
          "reference": "Paper-60-Section-1-Paragraph-1-Sentence-3",
          "local_name": "system",
          "local_types": [
            "software system"
          ],
          "iri": "Entity-system-Mention-1"
        }
      ],
      "relevance": 0.449951171875
    }
  },
  "summary": "This paper gives an overall account of a prototype natural language question answering system , called Chat-80 . Chat-80 has been designed to be both efficient and easily adaptable to a variety of applications . The system is implemented entirely in Prolog , a programming language based on logic . With the aid of a logic-based grammar formalism called extraposition grammars , Chat-80 translates English questions into the Prolog subset of logic . The resulting logical expression is then transformed by a planning algorithm into efficient Prolog , cf. query optimisation in a relational database . Finally , the Prolog form is executed to yield the answer .",
  "triples": [
    [
      "Entity-this_paper",
      "Predicate-gives_an_account_of",
      "Entity-a_prototype_natural_language_question_answering_system"
    ],
    [
      "Entity-chat-80",
      "Predicate-called",
      "Entity-natural_language_question_answering_system"
    ],
    [
      "Entity-this_paper",
      "Predicate-gives_an_overall_account_of",
      "Entity-a_prototype_natural_language_question_answering_system"
    ],
    [
      "Entity-chat-80",
      "Predicate-implemented_in",
      "Entity-prolog"
    ],
    [
      "Entity-chat-80",
      "Predicate-is_implemented_entirely_in",
      "Entity-prolog"
    ],
    [
      "Entity-chat-80",
      "Predicate-translates",
      "Entity-english_question"
    ],
    [
      "Entity-chat-80",
      "Predicate-translates_English_questions_into_the",
      "Entity-prolog_subset_of_logic"
    ],
    [
      "Entity-the_resulting_logical_expression",
      "Predicate-is_transformed_by",
      "Entity-a_planning_algorithm"
    ],
    [
      "Entity-the_resulting_logical_expression",
      "Predicate-is_then_transformed_by_a",
      "Entity-planning_algorithm"
    ],
    [
      "Entity-the_prolog_form",
      "Predicate-is_executed_to_yield",
      "Entity-answer"
    ]
  ],
  "triples_typing": [
    [
      "Entity-a_planning_algorithm",
      "skos:broader",
      "Entity-planning_algorithm"
    ],
    [
      "Entity-chat-80",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-a_prototype_natural_language_question_answering_system",
      "skos:broader",
      "Entity-system"
    ]
  ],
  "predicates": {
    "Predicate-gives_an_account_of": {
      "label": "gives an account of",
      "description": "To give an account of means to provide a detailed and comprehensive explanation or description of something. The subject (in this case, 'This paper') offers a thorough overview or analysis of the object (e.g., 'a prototype natural language question answering system'), shedding light on its key features, characteristics, or workings.",
      "disambiguation_index": 0
    },
    "Predicate-called": {
      "label": "called",
      "description": "The predicate 'called' indicates that a subject has been given or assigned a specific name, label, or designation to identify it. It implies a sense of classification, categorization, or identification, where the subject is being referred to by a particular term.",
      "disambiguation_index": 0
    },
    "Predicate-gives_an_overall_account_of": {
      "label": "gives an overall account of",
      "description": "The predicate 'gives an overall account of' indicates that the subject provides a comprehensive summary or description of the object. It implies that the subject has taken into consideration various aspects and details related to the object, and presents them in a unified and coherent manner.",
      "disambiguation_index": 0
    },
    "Predicate-implemented_in": {
      "label": "implemented in",
      "description": "The predicate 'implemented in' indicates that a system or program (subject) was built using or based on another language, framework, or technology (object). It describes the underlying foundation or infrastructure used to develop and run the subject.",
      "disambiguation_index": 0
    },
    "Predicate-is_implemented_entirely_in": {
      "label": "is implemented entirely in",
      "description": "This predicate indicates that the subject's functionality or implementation is fully contained within the object. It suggests a complete dependence on the object for its operation, with no external components or influences.",
      "disambiguation_index": 0
    },
    "Predicate-translates": {
      "label": "translates",
      "description": "The predicate 'translates' indicates a relationship where the subject (a system or entity) converts or expresses information from one language or form into another. This connection links the subject to the object, which represents the target language or form that the subject's content is being translated into.",
      "disambiguation_index": 0
    },
    "Predicate-translates_English_questions_into_the": {
      "label": "translates English questions into the",
      "description": "This predicate connects a subject (a system or tool capable of processing natural language) with an object (a formal representation or notation), indicating that the subject can convert English questions into the specified formal representation, allowing for the translation and manipulation of linguistic queries in a computational context.",
      "disambiguation_index": 0
    },
    "Predicate-is_transformed_by": {
      "label": "is transformed by",
      "description": "Indicates that one entity (the subject) undergoes a change or modification to become another form or representation of itself as a result of an external influence or process (the object).",
      "disambiguation_index": 0
    },
    "Predicate-is_then_transformed_by_a": {
      "label": "is then transformed by a",
      "description": "Indicates that the subject undergoes a transformation process to produce or result in something new, which is characterized by the object. The predicate highlights the causal relationship between the subject and the resulting state or entity.",
      "disambiguation_index": 0
    },
    "Predicate-is_executed_to_yield": {
      "label": "is executed to yield",
      "description": "The predicate 'is executed to yield' indicates a causal relationship between its subject and object. It suggests that the execution of some process or action (the subject) leads to, results in, or produces the specified outcome or product (the object).",
      "disambiguation_index": 0
    },
    "skos:broader": {
      "label": "has a broader term",
      "description": "The predicate 'has a broader term' indicates that the subject concept is a specific instance or subtype of the object concept. It represents an is-a relationship, where the subject is more specialized than the object.",
      "disambiguation_index": 0
    }
  }
}