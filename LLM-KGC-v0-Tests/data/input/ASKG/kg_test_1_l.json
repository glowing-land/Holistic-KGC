{
  "iri": "Paper-MEL_Metadata_Extractor__Loader",
  "title": "MEL: Metadata Extractor & Loader",
  "authors": [
    "Sergio J. Rodr\u00edguez M\u00e9ndez",
    "Pouya G. Omran",
    "Armin Haller",
    "KerryTaylor"
  ],
  "keywords": [
    "Metadata Extraction",
    "Information Extraction",
    "Data Preprocessing",
    "Knowledge Graph Construction",
    "Data Analysis Pipeline"
  ],
  "sections": [
    {
      "iri": "Section-1",
      "subtitle": "Abstract",
      "paragraphs": [
        {
          "iri": "Section-1-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-1-Sentence-1",
              "text": "The metadata and content-based information extraction tasks from heterogeneous file sets are pre-processing steps of many Knowledge Graph Construction Pipelines (KGCP)."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-2",
              "text": "These tasks often take longer than necessary due to the lack of proper tools that integrate several complementary extraction methods and properties to get a rich output set."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-3",
              "text": "This paper presents MEL, a Python-based tool that implements a set of methods to extract metadata and content-based information from unstructured information encoded in different source document formats."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-4",
              "text": "The results are generated as JSON files, which can: (a) optionally be stored in a document store, and (b) easily be mapped to RDF using a variety of tools such as J2RM."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-5",
              "text": "MEL supports more than 20 different file types, making it a versatile tool that aids pre-processing tasks as part of a KGCP based on comprehensive configurable settings."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-2",
      "subtitle": "Introduction",
      "paragraphs": [
        {
          "iri": "Section-2-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-1-Sentence-1",
              "text": "This paper introduces MEL, a tool that implements a set of methods to extract metadata and content-based information from various file formats as JSON objects."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-2",
              "text": "For each supported file type, MEL extracts the textual content from the source document and performs specific pre-processing and data cleaning tasks."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-3",
              "text": "Also, it performs basic text analysis tasks (pattern matching and keyword extraction) and generates the results in a machine-readable format (JSON), preparing the ground for content-based analysis."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-4",
              "text": "MEL is integrated with \u201cThe NLP -NER Toolkit\u201d (TNNT), which automates the extraction task of categorised named entities from the MEL results by using diverse state-of-the-art NLP tools and NER models [5]."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-5",
              "text": "MEL implements primitives for metadata and content extraction from unstructured data sets of heterogeneous formats, and along with the TNNT results, it provides the groundwork for content-based analysis."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-6",
              "text": "MEL and TNNT were developed in conjunction with J2RM [4], to easily map the JSON results to RDF as part of an automated KGCP."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-3",
      "subtitle": "Core Features",
      "paragraphs": [
        {
          "iri": "Section-3-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-1-Sentence-1",
              "text": "MEL has comprehensive metadata extraction support of various file types and formats."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-2",
              "text": "In a nutshell: (1) it takes as input a document (file) set; (2) then, for each document, it extracts its related metadata and content-based information, while performing basic text analysis (such as applying a configurable set of regular expressions and keyword extraction task); and, (3) as output, it generates a JSON file with the extracted metadata and text content with a structure based on the supported formats' document object model."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-3",
              "text": "It can store the results in a document store."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-4",
              "text": "MEL's general output structure is presented in Table 1."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-5",
              "text": "MEL has a detailed configuration JSON file that defines how the processing will be performed through a set of parameters and flags that establish the initial settings related to the document store, input document sets, TNNT general configuration, file extension mappings, the \u201cAssociated-Metadata\u201d processing (Table 1), and regular expressions to apply in the text analysis task, among other settings."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-6",
              "text": "The supported file types are presented in Table 2."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-7",
              "text": "The third column shows the theoretical number of attributes that the tool is able to extract per document type, whilst the fourth column shows the average of the extracted attributes from four use case document sets."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-8",
              "text": "OLE 2 file types and .docm can only be processed on Windows operating systems."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-9",
              "text": "Specifically for OLE 2 file types, MEL uses the olemeta tool."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-4",
      "subtitle": "Architecture",
      "paragraphs": [
        {
          "iri": "Section-4-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-1-Sentence-1",
              "text": "MEL is fully integrated with TNNT as depicted in Figure 1."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-2",
              "text": "The set of Python-based methods implemented in MEL are generic and can be applied to extract the content and metadata of all supported file types."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-3",
              "text": "MEL uses various opensource packages and tools with complementary capabilities to form a \u201cSwiss army knife\u201d of metadata and content-based information extraction from heterogeneous document sets."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-4",
              "text": "As part of the \u201cGeneral-Metadata\u201d extraction task, MEL optionally uses the XML output from the NLNZ Metadata Extractor tool, a Java standalone tool that extracts a comprehensive attribute and property list from dozens of file formats."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-5",
              "text": "The MEL general processing model is presented in Figure 2."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-6",
              "text": "It is important to note that each file type has its own specific processing model as well as the text analysis task, which is the last step that is performed for any output."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-5",
      "subtitle": "Related Work",
      "paragraphs": [
        {
          "iri": "Section-5-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-1-Sentence-1",
              "text": "The most comprehensive and current state-of-the-art tool for content extraction and analysis is Apache Tika, which is a complete and complex Java-based general-purpose system."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-2",
              "text": "While MEL's core goals resemble the ones of Apache Tika, the main difference and benefit of MEL as compared to Apache Tika is that it is a lightweight Python-based package for the metadata extraction of common file formats aimed to be used in a KGCP."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-3",
              "text": "Although there is a wide range of Python-based tools and libraries for metadata extraction, to the best of our knowledge, there is no package available that fully integrates in one system a comprehensive set of methods for metadata and content extraction of common file formats that generate the results in JSON structures based on the document object model of each format type."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-4",
              "text": "Last, MEL can assist in the information extraction stage of several KGCPs, such as the ones described in [6], [2], and [3]."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-6",
      "subtitle": "Conclusions and Future Work",
      "paragraphs": [
        {
          "iri": "Section-6-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-1-Sentence-1",
              "text": "MEL provides a versatile mechanism to extract metadata and content-based information from unstructured data sets of heterogeneous file formats, agnostic of the data sets' domain (general purpose)."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-2",
              "text": "It has been tested over thousands of documents using different formats and datasets as part of the AGRIF project."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-3",
              "text": "Based on the structure of the MEL's JSON results, it is possible to easily add a vocabulary or light-weight ontology using JSON-LD annotations, in order to make the extracted metadata \u201cRDF ready\u201d."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-4",
              "text": "This will be explored in the near future leveraging on the integration with JSON-LD ontologies."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-5",
              "text": "More file formats will be added in a per use-case requirements basis, in order to support KGCP tasks."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-6",
              "text": "Additionally, a project to \u201ccontainerise\u201d the MEL+TNNT tools is planned in the near future."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-7",
              "text": "The major contributions of this tool are: (1) the ability to extract metadata sets and content-based information from different source document formats; (2) the comprehensive support of over 20 different file types/formats integrated into one easy-to-use Python-based system; (3) integration with TNNT which automates the extraction of categorised named entities from the results by using diverse state-of-the-art NLP tools and NER models; and (4) the JSON result files can be easily mapped to RDF using J2RM."
            }
          ]
        }
      ]
    }
  ],
  "times": [
    8.797645568847656e-05,
    101.94542503356934,
    142.8577184677124,
    133.8298466205597,
    1.5561459064483643,
    0.0004918575286865234,
    0.0008428096771240234,
    194.97970485687256,
    297.10906767845154,
    3.837934732437134,
    714.5025231838226,
    0.2010807991027832,
    0.0012121200561523438,
    170.76555967330933,
    35.3455274105072,
    1.5537867546081543,
    1.1679892539978027,
    5.336523771286011,
    485.48671555519104,
    263.04125928878784,
    131.15203595161438,
    5.755706071853638,
    145.17740058898926,
    4.3276612758636475,
    0.10371112823486328,
    0.12467336654663086
  ],
  "nodes": {
    "Entity-meltnnt": {
      "node_id": "meltnnt",
      "disambiguation_index": 0,
      "label": "MEL+TNNT",
      "aliases": [
        "MEL+TNNT tools",
        "MEL+TNNT"
      ],
      "types": [
        "system",
        "project",
        "software",
        "toolset",
        "tool"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A Python-based toolset, consisting of MEL and TNNT tools, for extracting metadata sets and content- based information from different source document formats.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-6",
          "local_name": "MEL+TNNT",
          "local_types": [
            "project",
            "tool",
            "software",
            "toolset"
          ],
          "iri": "Entity-meltnnt-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-6",
          "local_name": "MEL+TNNT tools",
          "local_types": [
            "system",
            "toolset"
          ],
          "iri": "Entity-meltnnt-Mention-2"
        }
      ],
      "relevance": 0.81591796875
    },
    "Entity-mel__a_python-based_tool": {
      "node_id": "mel__a_python-based_tool",
      "disambiguation_index": 0,
      "label": "MEL, a Python-based tool",
      "aliases": [
        "The MEL",
        "this tool",
        "a tool that implements a set of methods to extract metadata and content-based information from various file formats as JSON objects",
        "MEL, a Python-based tool"
      ],
      "types": [
        "software",
        "tool",
        "methodology",
        "model"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL: a Python-based tool that extracts metadata and content-based information from various file types, generating JSON files as output.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "MEL, a Python-based tool",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-mel__a_python-based_tool-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "a tool that implements a set of methods to extract metadata and content-based information from various file formats as JSON objects",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-mel__a_python-based_tool-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-5",
          "local_name": "The MEL",
          "local_types": [
            "model"
          ],
          "iri": "Entity-mel__a_python-based_tool-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "this tool",
          "local_types": [
            "tool"
          ],
          "iri": "Entity-mel__a_python-based_tool-Mention-4"
        }
      ],
      "relevance": 0.8134765625
    },
    "Entity-it_(1)": {
      "node_id": "it_(1)",
      "disambiguation_index": 1,
      "label": "it",
      "aliases": [
        "it"
      ],
      "types": [
        "tool",
        "software"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL, a Python-based tool for metadata extraction and content-based information processing from unstructured file sets.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "it",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-it_(1)-Mention-1"
        }
      ],
      "relevance": 0.79541015625
    },
    "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type": {
      "node_id": "mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "disambiguation_index": 0,
      "label": "MEL are generic and can be applied to extract the content and metadata of all supported file types",
      "aliases": [
        "MEL are generic and can be applied to extract the content and metadata of all supported file types"
      ],
      "types": [
        "technology",
        "file type"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "MEL is a set of Python-based methods for extracting both content and metadata from various file formats, which it supports.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "MEL are generic and can be applied to extract the content and metadata of all supported file types",
          "local_types": [
            "technology",
            "file type"
          ],
          "iri": "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type-Mention-1"
        }
      ],
      "relevance": 0.794921875
    },
    "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_": {
      "node_id": "mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "disambiguation_index": 0,
      "label": "MEL can assist in the information extraction stage of several KGCPs, such as the ones described in [6], [2], and [3]",
      "aliases": [
        "MEL can assist in the information extraction stage of several KGCPs, such as the ones described in [6], [2], and [3]"
      ],
      "types": [
        "method",
        "tool"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL: a Python-based tool that assists in the information extraction stage of several Knowledge Graph Construction Pipelines (KGCPs)",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "MEL can assist in the information extraction stage of several KGCPs, such as the ones described in [6], [2], and [3]",
          "local_types": [
            "method",
            "tool"
          ],
          "iri": "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_-Mention-1"
        }
      ],
      "relevance": 0.79052734375
    },
    "Entity-this_paper": {
      "node_id": "this_paper",
      "disambiguation_index": 0,
      "label": "This paper",
      "aliases": [
        "This paper"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The research paper being referred to, which presents MEL, a Python-based tool for extracting metadata and content-based information from various file types.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "This paper",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this_paper-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "This paper",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this_paper-Mention-2"
        }
      ],
      "relevance": 0.7900390625
    },
    "Entity-the_metadata": {
      "node_id": "the_metadata",
      "disambiguation_index": 0,
      "label": "The metadata",
      "aliases": [
        "The metadata",
        "extracted metadata"
      ],
      "types": [
        "metadata"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Metadata extracted or generated by MEL, a Python-based tool that implements methods to extract metadata and content-based information from unstructured information encoded in different source document formats.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "The metadata",
          "local_types": [
            "metadata"
          ],
          "iri": "Entity-the_metadata-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "extracted metadata",
          "local_types": [
            "metadata"
          ],
          "iri": "Entity-the_metadata-Mention-2"
        }
      ],
      "relevance": 0.783203125
    },
    "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting": {
      "node_id": "a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "disambiguation_index": 0,
      "label": "a versatile tool that aids pre-processing tasks as part of a KGCP based on comprehensive configurable settings",
      "aliases": [
        "a versatile tool that aids pre-processing tasks as part of a KGCP based on comprehensive configurable settings"
      ],
      "types": [
        "tool",
        "pre-processing task",
        "KGCP setting"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "MEL: A Python-based metadata extractor and loader supporting over 20 file types, used for pre-processing tasks as part of a Knowledge Graph Construction Pipeline with configurable settings.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "a versatile tool that aids pre-processing tasks as part of a KGCP based on comprehensive configurable settings",
          "local_types": [
            "tool",
            "pre-processing task",
            "KGCP setting"
          ],
          "iri": "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting-Mention-1"
        }
      ],
      "relevance": 0.78173828125
    },
    "Entity-mel_s": {
      "node_id": "mel_s",
      "disambiguation_index": 0,
      "label": "MEL's",
      "aliases": [
        "MEL's"
      ],
      "types": [
        "organization",
        "research institution"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The Metadata Extractor & Loader, a Python-based tool for extracting metadata and content- based information from unstructured data sets of heterogeneous file formats.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "MEL's",
          "local_types": [
            "organization",
            "research institution"
          ],
          "iri": "Entity-mel_s-Mention-1"
        }
      ],
      "relevance": 0.77197265625
    },
    "Entity-the_set_of_python-based_method": {
      "node_id": "the_set_of_python-based_method",
      "disambiguation_index": 0,
      "label": "The set of Python-based methods",
      "aliases": [
        "comprehensive set of methods for metadata and content extraction",
        "The set of Python-based methods"
      ],
      "types": [
        "metadata",
        "extraction",
        "content",
        "methods"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A collection of generic, Python-implemented extraction methods used by MEL to extract content and metadata from various file types.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "The set of Python-based methods",
          "local_types": [
            "methods"
          ],
          "iri": "Entity-the_set_of_python-based_method-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "comprehensive set of methods for metadata and content extraction",
          "local_types": [
            "methods",
            "metadata",
            "content",
            "extraction"
          ],
          "iri": "Entity-the_set_of_python-based_method-Mention-2"
        }
      ],
      "relevance": 0.759765625
    },
    "Entity-mel_extract_the_textual_content_from_the_source_document": {
      "node_id": "mel_extract_the_textual_content_from_the_source_document",
      "disambiguation_index": 0,
      "label": "MEL extracts the textual content from the source document",
      "aliases": [
        "MEL extracts the textual content from the source document"
      ],
      "types": [
        "process",
        "extraction"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A tool that extracts metadata and textual content from various file formats, performing specific preprocessing and data cleaning tasks.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "MEL extracts the textual content from the source document",
          "local_types": [
            "process",
            "extraction"
          ],
          "iri": "Entity-mel_extract_the_textual_content_from_the_source_document-Mention-1"
        }
      ],
      "relevance": 0.75732421875
    },
    "Entity-json_file_with_the_extracted_metadata_and_text_content": {
      "node_id": "json_file_with_the_extracted_metadata_and_text_content",
      "disambiguation_index": 0,
      "label": "JSON file with the extracted metadata and text content",
      "aliases": [
        "JSON file with the extracted metadata and text content",
        "a JSON file with the extracted metadata and text content"
      ],
      "types": [
        "file",
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The output of MEL, which generates a JSON file containing extracted metadata and text content from input documents.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "JSON file with the extracted metadata and text content",
          "local_types": [
            "output"
          ],
          "iri": "Entity-json_file_with_the_extracted_metadata_and_text_content-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "a JSON file with the extracted metadata and text content",
          "local_types": [
            "output",
            "file"
          ],
          "iri": "Entity-json_file_with_the_extracted_metadata_and_text_content-Mention-2"
        }
      ],
      "relevance": 0.75439453125
    },
    "Entity-it_(2)": {
      "node_id": "it_(2)",
      "disambiguation_index": 2,
      "label": "It",
      "aliases": [
        "It"
      ],
      "types": [
        "project"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The MEL tool, a Python-based metadata extractor and loader.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "It",
          "local_types": [
            "project"
          ],
          "iri": "Entity-it_(2)-Mention-1"
        }
      ],
      "relevance": 0.7373046875
    },
    "Entity-mel_a_compared_to_apache_tika": {
      "node_id": "mel_a_compared_to_apache_tika",
      "disambiguation_index": 0,
      "label": "MEL as compared to Apache Tika",
      "aliases": [
        "a lightweight Python-based package for the metadata extraction of common file formats",
        "MEL as compared to Apache Tika"
      ],
      "types": [
        "package"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "MEL refers to a software package, specifically a lightweight Python-based tool for extracting metadata from various file formats.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "MEL as compared to Apache Tika",
          "local_types": [
            "package"
          ],
          "iri": "Entity-mel_a_compared_to_apache_tika-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "a lightweight Python-based package for the metadata extraction of common file formats",
          "local_types": [
            "package"
          ],
          "iri": "Entity-mel_a_compared_to_apache_tika-Mention-2"
        }
      ],
      "relevance": 0.7265625
    },
    "Entity-for_each_supported_file_type": {
      "node_id": "for_each_supported_file_type",
      "disambiguation_index": 0,
      "label": "For each supported file type",
      "aliases": [
        "For each supported file type"
      ],
      "types": [
        "description"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL's processing of various file formats to extract metadata and perform preprocessing, data cleaning, and basic text analysis.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "For each supported file type",
          "local_types": [
            "description"
          ],
          "iri": "Entity-for_each_supported_file_type-Mention-1"
        }
      ],
      "relevance": 0.712890625
    },
    "Entity-it": {
      "node_id": "it",
      "disambiguation_index": 0,
      "label": "it",
      "aliases": [
        "It",
        "it"
      ],
      "types": [
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL's metadata extractor, which performs basic text analysis tasks such as pattern matching and keyword extraction.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "it",
          "local_types": [
            "system"
          ],
          "iri": "Entity-it-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "It",
          "local_types": [
            "system"
          ],
          "iri": "Entity-it-Mention-2"
        }
      ],
      "relevance": 0.69921875
    },
    "Entity-mel": {
      "node_id": "mel",
      "disambiguation_index": 0,
      "label": "MEL",
      "aliases": [
        "MEL"
      ],
      "types": [
        "package",
        "initiative",
        "system",
        "software framework",
        "software",
        "project",
        "library",
        "metadata extraction tool",
        "organization",
        "research program",
        "method",
        "model",
        "tool",
        "conference"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A software framework or system for extracting metadata",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-mel-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-mel-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-mel-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-mel-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "system",
            "model",
            "software"
          ],
          "iri": "Entity-mel-Mention-5"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "system",
            "software"
          ],
          "iri": "Entity-mel-Mention-6"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "MEL",
          "local_types": [
            "method",
            "tool",
            "software"
          ],
          "iri": "Entity-mel-Mention-7"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-mel-Mention-8"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "MEL",
          "local_types": [
            "organization",
            "conference"
          ],
          "iri": "Entity-mel-Mention-9"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "system",
            "software"
          ],
          "iri": "Entity-mel-Mention-10"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-9",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-mel-Mention-11"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "system",
            "model",
            "software"
          ],
          "iri": "Entity-mel-Mention-12"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "MEL",
          "local_types": [
            "software framework",
            "tool",
            "software"
          ],
          "iri": "Entity-mel-Mention-13"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "MEL",
          "local_types": [
            "method",
            "project",
            "tool",
            "initiative"
          ],
          "iri": "Entity-mel-Mention-14"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "MEL",
          "local_types": [
            "research program",
            "project",
            "tool"
          ],
          "iri": "Entity-mel-Mention-15"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-5",
          "local_name": "MEL",
          "local_types": [
            "model"
          ],
          "iri": "Entity-mel-Mention-16"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "MEL",
          "local_types": [
            "metadata extraction tool",
            "package",
            "library",
            "software",
            "system",
            "project"
          ],
          "iri": "Entity-mel-Mention-17"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "MEL",
          "local_types": [
            "tool",
            "system",
            "software"
          ],
          "iri": "Entity-mel-Mention-18"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "MEL",
          "local_types": [
            "method",
            "tool"
          ],
          "iri": "Entity-mel-Mention-19"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "MEL",
          "local_types": [
            "organization",
            "conference"
          ],
          "iri": "Entity-mel-Mention-20"
        }
      ],
      "relevance": 0.6982421875
    },
    "Entity-agrif": {
      "node_id": "agrif",
      "disambiguation_index": 0,
      "label": "AGRIF",
      "aliases": [
        "AGRIF",
        "the AGRIF project",
        "AGRIF project"
      ],
      "types": [
        "initiative",
        "project",
        "research initiative",
        "research project",
        "AGRIF"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The AGRIF project, a research initiative that uses MEL (Metadata Extractor & Loader) to extract metadata and content-based information from unstructured data sets of heterogeneous file formats.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "AGRIF",
          "local_types": [
            "project"
          ],
          "iri": "Entity-agrif-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "AGRIF project",
          "local_types": [
            "research project",
            "project",
            "initiative",
            "research initiative"
          ],
          "iri": "Entity-agrif-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "the AGRIF project",
          "local_types": [
            "project",
            "AGRIF"
          ],
          "iri": "Entity-agrif-Mention-3"
        }
      ],
      "relevance": 0.6923828125
    },
    "Entity-each_document": {
      "node_id": "each_document",
      "disambiguation_index": 0,
      "label": "each document",
      "aliases": [
        "each document"
      ],
      "types": [
        "document",
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A file in a set of files, which MEL extracts metadata and content-based information from while performing basic text analysis.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "each document",
          "local_types": [
            "document",
            "paper"
          ],
          "iri": "Entity-each_document-Mention-1"
        }
      ],
      "relevance": 0.69189453125
    },
    "Entity-basic_text_analysis__such_a_applying_a_configurable_set_of_regular_expression_and_keyword_extraction_task_": {
      "node_id": "basic_text_analysis__such_a_applying_a_configurable_set_of_regular_expression_and_keyword_extraction_task_",
      "disambiguation_index": 0,
      "label": "basic text analysis (such as applying a configurable set of regular expressions and keyword extraction task)",
      "aliases": [
        "basic text analysis (such as applying a configurable set of regular expressions and keyword extraction task)"
      ],
      "types": [
        "analysis",
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of text processing technique used in MEL for extracting metadata and content-based information from documents, involving tasks such as applying regular expressions and keyword extraction.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "basic text analysis (such as applying a configurable set of regular expressions and keyword extraction task)",
          "local_types": [
            "analysis",
            "methodology"
          ],
          "iri": "Entity-basic_text_analysis__such_a_applying_a_configurable_set_of_regular_expression_and_keyword_extraction_task_-Mention-1"
        }
      ],
      "relevance": 0.69091796875
    },
    "Entity-the_result": {
      "node_id": "the_result",
      "disambiguation_index": 0,
      "label": "The results",
      "aliases": [
        "The results",
        "the results",
        "MEL's JSON results"
      ],
      "types": [
        "result",
        "results",
        "output"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The metadata extraction results generated by MEL as JSON files.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "The results",
          "local_types": [
            "result"
          ],
          "iri": "Entity-the_result-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "the results",
          "local_types": [
            "result",
            "output"
          ],
          "iri": "Entity-the_result-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "MEL's JSON results",
          "local_types": [
            "results"
          ],
          "iri": "Entity-the_result-Mention-3"
        }
      ],
      "relevance": 0.68798828125
    },
    "Entity-the_supported_file_type": {
      "node_id": "the_supported_file_type",
      "disambiguation_index": 0,
      "label": "The supported file types",
      "aliases": [
        "The supported file types"
      ],
      "types": [
        "file type"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A list of file formats that can be processed by MEL, a metadata extractor and loader tool.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-6",
          "local_name": "The supported file types",
          "local_types": [
            "file type"
          ],
          "iri": "Entity-the_supported_file_type-Mention-1"
        }
      ],
      "relevance": 0.6865234375
    },
    "Entity-the_tnnt_result": {
      "node_id": "the_tnnt_result",
      "disambiguation_index": 0,
      "label": "the TNNT results",
      "aliases": [
        "the TNNT results"
      ],
      "types": [
        "result",
        "study"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The results generated by The NLP-NER Toolkit (TNNT) that automate the extraction task of categorized named entities from MEL's metadata and content-based information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "the TNNT results",
          "local_types": [
            "result",
            "study"
          ],
          "iri": "Entity-the_tnnt_result-Mention-1"
        }
      ],
      "relevance": 0.68359375
    },
    "Entity-four_use_case_document_set": {
      "node_id": "four_use_case_document_set",
      "disambiguation_index": 0,
      "label": "four use case document sets",
      "aliases": [
        "four use case document sets",
        "a document (file) set"
      ],
      "types": [
        "data",
        "dataset",
        "data collection"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of documents used to demonstrate and evaluate MEL's metadata extraction capabilities, comprising four instances with varying attributes extracted by the tool.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "four use case document sets",
          "local_types": [
            "dataset",
            "data collection"
          ],
          "iri": "Entity-four_use_case_document_set-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "a document (file) set",
          "local_types": [
            "dataset",
            "data"
          ],
          "iri": "Entity-four_use_case_document_set-Mention-2"
        }
      ],
      "relevance": 0.6796875
    },
    "Entity-there_is_a_wide_range_of_python-based_tool": {
      "node_id": "there_is_a_wide_range_of_python-based_tool",
      "disambiguation_index": 0,
      "label": "there is a wide range of Python-based tools",
      "aliases": [
        "there is a wide range of Python-based tools"
      ],
      "types": [
        "tools",
        "Python"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Python-based libraries and tools used for metadata extraction from various file formats, generating output as JSON structures.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "there is a wide range of Python-based tools",
          "local_types": [
            "tools",
            "Python"
          ],
          "iri": "Entity-there_is_a_wide_range_of_python-based_tool-Mention-1"
        }
      ],
      "relevance": 0.677734375
    },
    "Entity-_b__easily_be_mapped_to_rdf_using_a_variety_of_tool_such_a_j2rm": {
      "node_id": "_b__easily_be_mapped_to_rdf_using_a_variety_of_tool_such_a_j2rm",
      "disambiguation_index": 0,
      "label": "(b) easily be mapped to RDF using a variety of tools such as J2RM",
      "aliases": [
        "RDF using J2RM",
        "(b) easily be mapped to RDF using a variety of tools such as J2RM"
      ],
      "types": [
        "mapping tool",
        "technology",
        "format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The results generated by MEL that are represented as JSON files.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "(b) easily be mapped to RDF using a variety of tools such as J2RM",
          "local_types": [
            "mapping tool"
          ],
          "iri": "Entity-_b__easily_be_mapped_to_rdf_using_a_variety_of_tool_such_a_j2rm-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "RDF using J2RM",
          "local_types": [
            "technology",
            "format"
          ],
          "iri": "Entity-_b__easily_be_mapped_to_rdf_using_a_variety_of_tool_such_a_j2rm-Mention-2"
        }
      ],
      "relevance": 0.671875
    },
    "Entity-more_file_format": {
      "node_id": "more_file_format",
      "disambiguation_index": 0,
      "label": "More file formats",
      "aliases": [
        "More file formats"
      ],
      "types": [
        "file format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Additional file format types that can be supported by the MEL tool for Knowledge Graph Construction Pipeline (KGCP) tasks.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-5",
          "local_name": "More file formats",
          "local_types": [
            "file format"
          ],
          "iri": "Entity-more_file_format-Mention-1"
        }
      ],
      "relevance": 0.671875
    },
    "Entity-it_own_specific_processing_model": {
      "node_id": "it_own_specific_processing_model",
      "disambiguation_index": 0,
      "label": "its own specific processing model",
      "aliases": [
        "its own specific processing model"
      ],
      "types": [
        "processing_model"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A unique set of rules and procedures governing how MEL processes metadata and content-based information from different file types, taking into account each file type's specific characteristics.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "its own specific processing model",
          "local_types": [
            "processing_model"
          ],
          "iri": "Entity-it_own_specific_processing_model-Mention-1"
        }
      ],
      "relevance": 0.67138671875
    },
    "Entity-the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type": {
      "node_id": "the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type",
      "disambiguation_index": 0,
      "label": "the theoretical number of attributes that the tool is able to extract per document type",
      "aliases": [
        "the theoretical number of attributes that the tool is able to extract per document type"
      ],
      "types": [
        "attribute",
        "tool",
        "document type"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The maximum amount of metadata features that MEL can extract and process per file type, considering its capabilities and limitations.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "the theoretical number of attributes that the tool is able to extract per document type",
          "local_types": [
            "attribute",
            "tool",
            "document type"
          ],
          "iri": "Entity-the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type-Mention-1"
        }
      ],
      "relevance": 0.66552734375
    },
    "Entity-parameter_and_flag_that_establish_the_initial_setting_related_to_the_document_store__input_document_set__tnnt_general_configuration__file_extension_mapping__the__associated-metadata__processing__table_1___and_regular_expression_to_apply_in_the_text_analysis_task": {
      "node_id": "parameter_and_flag_that_establish_the_initial_setting_related_to_the_document_store__input_document_set__tnnt_general_configuration__file_extension_mapping__the__associated-metadata__processing__table_1___and_regular_expression_to_apply_in_the_text_analysis_task",
      "disambiguation_index": 0,
      "label": "parameters and flags that establish the initial settings related to the document store, input document sets, TNNT general configuration, file extension mappings, the \u201cAssociated-Metadata\u201d processing (Table 1), and regular expressions to apply in the text analysis task",
      "aliases": [
        "parameters and flags that establish the initial settings related to the document store, input document sets, TNNT general configuration, file extension mappings, the \u201cAssociated-Metadata\u201d processing (Table 1), and regular expressions to apply in the text analysis task"
      ],
      "types": [
        "configuration",
        "settings"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Initial setup parameters for MEL's metadata extraction and content-based information processing",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "parameters and flags that establish the initial settings related to the document store, input document sets, TNNT general configuration, file extension mappings, the \u201cAssociated-Metadata\u201d processing (Table 1), and regular expressions to apply in the text analysis task",
          "local_types": [
            "configuration",
            "settings"
          ],
          "iri": "Entity-parameter_and_flag_that_establish_the_initial_setting_related_to_the_document_store__input_document_set__tnnt_general_configuration__file_extension_mapping__the__associated-metadata__processing__table_1___and_regular_expression_to_apply_in_the_text_analysis_task-Mention-1"
        }
      ],
      "relevance": 0.6630859375
    },
    "Entity-property_to_get_a_rich_output_set": {
      "node_id": "property_to_get_a_rich_output_set",
      "disambiguation_index": 0,
      "label": "properties to get a rich output set",
      "aliases": [
        "properties to get a rich output set"
      ],
      "types": [
        "characteristic",
        "attribute",
        "feature"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The characteristics or attributes required by MEL (Metadata Extractor & Loader) to produce comprehensive and detailed metadata extraction results.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "properties to get a rich output set",
          "local_types": [
            "characteristic",
            "attribute",
            "feature"
          ],
          "iri": "Entity-property_to_get_a_rich_output_set-Mention-1"
        }
      ],
      "relevance": 0.66259765625
    },
    "Entity-tnnt_general_configuration": {
      "node_id": "tnnt_general_configuration",
      "disambiguation_index": 0,
      "label": "TNNT general configuration",
      "aliases": [
        "TNNT general configuration"
      ],
      "types": [
        "configuration settings",
        "processing options"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The comprehensive set of parameters and flags that define how MEL processes input document sets, including file extension mappings, 'Associated-Metadata' processing, regular expressions for text analysis, and other settings.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "TNNT general configuration",
          "local_types": [
            "configuration settings",
            "processing options"
          ],
          "iri": "Entity-tnnt_general_configuration-Mention-1"
        }
      ],
      "relevance": 0.66015625
    },
    "Entity-this": {
      "node_id": "this",
      "disambiguation_index": 0,
      "label": "This",
      "aliases": [
        "This"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The integration of MEL's results with JSON-LD ontologies to make extracted metadata 'RDF ready'.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-4",
          "local_name": "This",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this-Mention-1"
        }
      ],
      "relevance": 0.6591796875
    },
    "Entity-j2rm__4_": {
      "node_id": "j2rm__4_",
      "disambiguation_index": 0,
      "label": "J2RM [4]",
      "aliases": [
        "J2RM [4]"
      ],
      "types": [
        "tool"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "J2RM, a tool that maps JSON results from MEL and TNNT to RDF format",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "J2RM [4]",
          "local_types": [
            "tool"
          ],
          "iri": "Entity-j2rm__4_-Mention-1"
        }
      ],
      "relevance": 0.65771484375
    },
    "Entity-python-based_method_implemented_in_mel": {
      "node_id": "python-based_method_implemented_in_mel",
      "disambiguation_index": 0,
      "label": "Python-based methods implemented in MEL",
      "aliases": [
        "Python-based methods implemented in MEL"
      ],
      "types": [
        "methodology",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of algorithms or methodologies that utilize Python programming language and are integrated with a software called MEL.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "Python-based methods implemented in MEL",
          "local_types": [
            "methodology",
            "algorithm"
          ],
          "iri": "Entity-python-based_method_implemented_in_mel-Mention-1"
        }
      ],
      "relevance": 0.6572265625
    },
    "Entity-the_average_of_the_extracted_attribute_from_four_use_case_document_set": {
      "node_id": "the_average_of_the_extracted_attribute_from_four_use_case_document_set",
      "disambiguation_index": 0,
      "label": "the average of the extracted attributes from four use case document sets",
      "aliases": [
        "the average of the extracted attributes from four use case document sets"
      ],
      "types": [
        "average",
        "attributes",
        "use cases",
        "documents"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The mean number of metadata and content-based information attributes obtained by processing four specific documents or file types using MEL.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "the average of the extracted attributes from four use case document sets",
          "local_types": [
            "average",
            "attributes",
            "use cases",
            "documents"
          ],
          "iri": "Entity-the_average_of_the_extracted_attribute_from_four_use_case_document_set-Mention-1"
        }
      ],
      "relevance": 0.65673828125
    },
    "Entity-in_order_to_support_kgcp_task": {
      "node_id": "in_order_to_support_kgcp_task",
      "disambiguation_index": 0,
      "label": "in order to support KGCP tasks",
      "aliases": [
        "in order to support KGCP tasks"
      ],
      "types": [
        "task",
        "KGCP task"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The addition of more file formats to MEL's system on a case-by-case basis for the purpose of supporting Knowledge Graph Construction Pipeline (KGCP) tasks.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-5",
          "local_name": "in order to support KGCP tasks",
          "local_types": [
            "task",
            "KGCP task"
          ],
          "iri": "Entity-in_order_to_support_kgcp_task-Mention-1"
        }
      ],
      "relevance": 0.65625
    },
    "Entity-last": {
      "node_id": "last",
      "disambiguation_index": 0,
      "label": "Last",
      "aliases": [
        "Last"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL's ability to aid in the information extraction stage of various Knowledge Graph Construction Pipelines (KGCPs)",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "Last",
          "local_types": [
            "author"
          ],
          "iri": "Entity-last-Mention-1"
        }
      ],
      "relevance": 0.65380859375
    },
    "Entity-each_file_type": {
      "node_id": "each_file_type",
      "disambiguation_index": 0,
      "label": "each file type",
      "aliases": [
        "each file type"
      ],
      "types": [
        "file_type"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A distinct category or format of files that requires its own specific processing model and text analysis task within the MEL metadata extractor and loader.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "each file type",
          "local_types": [
            "file_type"
          ],
          "iri": "Entity-each_file_type-Mention-1"
        }
      ],
      "relevance": 0.65087890625
    },
    "Entity-more_than_20_different_file_type": {
      "node_id": "more_than_20_different_file_type",
      "disambiguation_index": 0,
      "label": "more than 20 different file types",
      "aliases": [
        "more than 20 different file types",
        "over 20 different file types/formats"
      ],
      "types": [
        "file type",
        "format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of over 20 distinct formats for storing and organizing digital content, including various file types that can be processed by MEL.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "more than 20 different file types",
          "local_types": [
            "file type"
          ],
          "iri": "Entity-more_than_20_different_file_type-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "over 20 different file types/formats",
          "local_types": [
            "file type",
            "format"
          ],
          "iri": "Entity-more_than_20_different_file_type-Mention-2"
        }
      ],
      "relevance": 0.6494140625
    },
    "Entity-different_source_document_format": {
      "node_id": "different_source_document_format",
      "disambiguation_index": 0,
      "label": "different source document formats",
      "aliases": [
        "different source document formats"
      ],
      "types": [
        "format",
        "document format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of formats for storing unstructured data, including over 20 different file types that MEL supports.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "different source document formats",
          "local_types": [
            "format",
            "document format"
          ],
          "iri": "Entity-different_source_document_format-Mention-1"
        }
      ],
      "relevance": 0.646484375
    },
    "Entity-heterogeneous_file_set": {
      "node_id": "heterogeneous_file_set",
      "disambiguation_index": 0,
      "label": "heterogeneous file sets",
      "aliases": [
        "heterogeneous file sets",
        "unstructured data sets of heterogeneous file formats"
      ],
      "types": [
        "data set",
        "collection",
        "file set",
        "dataset",
        "data source",
        "file format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of files with different formats and structures that require metadata extraction and content-based information processing.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "heterogeneous file sets",
          "local_types": [
            "data source",
            "file set",
            "data set",
            "collection"
          ],
          "iri": "Entity-heterogeneous_file_set-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "unstructured data sets of heterogeneous file formats",
          "local_types": [
            "dataset",
            "file format"
          ],
          "iri": "Entity-heterogeneous_file_set-Mention-2"
        }
      ],
      "relevance": 0.6376953125
    },
    "Entity-a_document_store": {
      "node_id": "a_document_store",
      "disambiguation_index": 0,
      "label": "a document store",
      "aliases": [
        "a document store"
      ],
      "types": [
        "document_store",
        "store"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A repository that stores JSON files generated by MEL as output, containing extracted metadata and text content.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "a document store",
          "local_types": [
            "document_store",
            "store"
          ],
          "iri": "Entity-a_document_store-Mention-1"
        }
      ],
      "relevance": 0.6376953125
    },
    "Entity-proper_tool_that_integrate_several_complementary_extraction_method_and_property_to_get_a_rich_output_set": {
      "node_id": "proper_tool_that_integrate_several_complementary_extraction_method_and_property_to_get_a_rich_output_set",
      "disambiguation_index": 0,
      "label": "proper tools that integrate several complementary extraction methods and properties to get a rich output set",
      "aliases": [
        "proper tools that integrate several complementary extraction methods and properties to get a rich output set"
      ],
      "types": [
        "tool",
        "extraction method",
        "property"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A toolset that combines multiple metadata extraction techniques and features to efficiently generate comprehensive outputs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "proper tools that integrate several complementary extraction methods and properties to get a rich output set",
          "local_types": [
            "tool",
            "extraction method",
            "property"
          ],
          "iri": "Entity-proper_tool_that_integrate_several_complementary_extraction_method_and_property_to_get_a_rich_output_set-Mention-1"
        }
      ],
      "relevance": 0.6328125
    },
    "Entity-these_task": {
      "node_id": "these_task",
      "disambiguation_index": 0,
      "label": "These tasks",
      "aliases": [
        "These tasks"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Metadata and content-based information extraction tasks from heterogeneous file sets",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "These tasks",
          "local_types": [
            "task"
          ],
          "iri": "Entity-these_task-Mention-1"
        }
      ],
      "relevance": 0.62939453125
    },
    "Entity-general_purpose": {
      "node_id": "general_purpose",
      "disambiguation_index": 0,
      "label": "general purpose",
      "aliases": [
        "general purpose"
      ],
      "types": [
        "domain"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A general-purpose mechanism for extracting metadata and content-based information from unstructured data sets of heterogeneous file formats, agnostic to the data sets' domain.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "general purpose",
          "local_types": [
            "domain"
          ],
          "iri": "Entity-general_purpose-Mention-1"
        }
      ],
      "relevance": 0.62939453125
    },
    "Entity-no_package_available_that_fully_integrates_in_one_system": {
      "node_id": "no_package_available_that_fully_integrates_in_one_system",
      "disambiguation_index": 0,
      "label": "no package available that fully integrates in one system",
      "aliases": [
        "no package available that fully integrates in one system"
      ],
      "types": [
        "package",
        "integration"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A Python-based package that lacks integration with other tools and libraries for metadata extraction, failing to generate results in JSON structures based on the document object model of each format type.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "no package available that fully integrates in one system",
          "local_types": [
            "package",
            "integration"
          ],
          "iri": "Entity-no_package_available_that_fully_integrates_in_one_system-Mention-1"
        }
      ],
      "relevance": 0.62158203125
    },
    "Entity-content-based_information": {
      "node_id": "content-based_information",
      "disambiguation_index": 0,
      "label": "content-based information",
      "aliases": [
        "its related metadata and content-based information",
        "content-based information"
      ],
      "types": [
        "metadata",
        "information",
        "extracted data",
        "data",
        "text analysis"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Information derived from or related to the actual content of documents, such as metadata and extracted data.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "content-based information",
          "local_types": [
            "text analysis",
            "extracted data"
          ],
          "iri": "Entity-content-based_information-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "its related metadata and content-based information",
          "local_types": [
            "metadata",
            "information"
          ],
          "iri": "Entity-content-based_information-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "content-based information",
          "local_types": [
            "data"
          ],
          "iri": "Entity-content-based_information-Mention-3"
        }
      ],
      "relevance": 0.6201171875
    },
    "Entity-nlnz_metadata_extractor_tool": {
      "node_id": "nlnz_metadata_extractor_tool",
      "disambiguation_index": 0,
      "label": "NLNZ Metadata Extractor tool",
      "aliases": [
        "NLNZ Metadata Extractor",
        "the NLNZ Metadata Extractor tool",
        "NLNZ Metadata Extractor tool",
        "the XML output from the NLNZ Metadata Extractor tool, a Java standalone tool that extracts a comprehensive attribute and property list from dozens of file formats"
      ],
      "types": [
        "software application",
        "software",
        "extractor",
        "tool",
        "output"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A Java standalone tool that extracts a comprehensive attribute and property list from dozens of file formats.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "NLNZ Metadata Extractor tool",
          "local_types": [
            "software application",
            "tool",
            "software"
          ],
          "iri": "Entity-nlnz_metadata_extractor_tool-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "NLNZ Metadata Extractor",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-nlnz_metadata_extractor_tool-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "the XML output from the NLNZ Metadata Extractor tool, a Java standalone tool that extracts a comprehensive attribute and property list from dozens of file formats",
          "local_types": [
            "output",
            "tool"
          ],
          "iri": "Entity-nlnz_metadata_extractor_tool-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "the NLNZ Metadata Extractor tool",
          "local_types": [
            "extractor",
            "tool"
          ],
          "iri": "Entity-nlnz_metadata_extractor_tool-Mention-4"
        }
      ],
      "relevance": 0.61865234375
    },
    "Entity-metadata_extraction_of_common_file_format": {
      "node_id": "metadata_extraction_of_common_file_format",
      "disambiguation_index": 0,
      "label": "metadata extraction of common file formats",
      "aliases": [
        "metadata extraction of common file formats"
      ],
      "types": [
        "task",
        "functionality"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of extracting metadata from various common file formats, such as text files, images, and documents.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "metadata extraction of common file formats",
          "local_types": [
            "task",
            "functionality"
          ],
          "iri": "Entity-metadata_extraction_of_common_file_format-Mention-1"
        }
      ],
      "relevance": 0.61767578125
    },
    "Entity-metadata_and_content_extraction": {
      "node_id": "metadata_and_content_extraction",
      "disambiguation_index": 0,
      "label": "metadata and content extraction",
      "aliases": [
        "metadata and content extraction",
        "metadata extraction"
      ],
      "types": [
        "data processing",
        "extraction",
        "task",
        "information retrieval"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of extracting relevant information or metadata from various types of unstructured data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "metadata and content extraction",
          "local_types": [
            "data processing",
            "information retrieval"
          ],
          "iri": "Entity-metadata_and_content_extraction-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "metadata extraction",
          "local_types": [
            "extraction",
            "task",
            "data processing",
            "information retrieval"
          ],
          "iri": "Entity-metadata_and_content_extraction-Mention-2"
        }
      ],
      "relevance": 0.6171875
    },
    "Entity-metadata_extraction_support": {
      "node_id": "metadata_extraction_support",
      "disambiguation_index": 0,
      "label": "metadata extraction support",
      "aliases": [
        "metadata extraction support",
        "comprehensive metadata extraction support of various file types and formats",
        "metadata extraction support of various file types and formats"
      ],
      "types": [
        "functionality",
        "feature"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A functionality or feature that enables the automatic extraction of metadata from different files, formats, and sources.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "metadata extraction support",
          "local_types": [
            "functionality",
            "feature"
          ],
          "iri": "Entity-metadata_extraction_support-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "metadata extraction support of various file types and formats",
          "local_types": [
            "feature"
          ],
          "iri": "Entity-metadata_extraction_support-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "comprehensive metadata extraction support of various file types and formats",
          "local_types": [
            "feature"
          ],
          "iri": "Entity-metadata_extraction_support-Mention-3"
        }
      ],
      "relevance": 0.615234375
    },
    "Entity-heterogeneous_format": {
      "node_id": "heterogeneous_format",
      "disambiguation_index": 0,
      "label": "heterogeneous formats",
      "aliases": [
        "heterogeneous formats"
      ],
      "types": [
        "format",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Unstructured data sets in various file types that require metadata and content extraction",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "heterogeneous formats",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-heterogeneous_format-Mention-1"
        }
      ],
      "relevance": 0.6025390625
    },
    "Entity-ole_2_file_type": {
      "node_id": "ole_2_file_type",
      "disambiguation_index": 0,
      "label": "OLE 2 file types",
      "aliases": [
        "OLE 2 file types"
      ],
      "types": [
        "file type",
        "format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of file that, along with .docm files, can only be processed by MEL (Metadata Extractor & Loader) on Windows operating systems.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-8",
          "local_name": "OLE 2 file types",
          "local_types": [
            "file type"
          ],
          "iri": "Entity-ole_2_file_type-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-9",
          "local_name": "OLE 2 file types",
          "local_types": [
            "file type",
            "format"
          ],
          "iri": "Entity-ole_2_file_type-Mention-2"
        }
      ],
      "relevance": 0.6015625
    },
    "Entity-_a__optionally_be_stored_in_a_document_store": {
      "node_id": "_a__optionally_be_stored_in_a_document_store",
      "disambiguation_index": 0,
      "label": "(a) optionally be stored in a document store",
      "aliases": [
        "(a) optionally be stored in a document store"
      ],
      "types": [
        "storage option"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The option to store JSON files generated by MEL.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "(a) optionally be stored in a document store",
          "local_types": [
            "storage option"
          ],
          "iri": "Entity-_a__optionally_be_stored_in_a_document_store-Mention-1"
        }
      ],
      "relevance": 0.60009765625
    },
    "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set": {
      "node_id": "primitive_for_metadata_and_content_extraction_from_unstructured_data_set",
      "disambiguation_index": 0,
      "label": "primitives for metadata and content extraction from unstructured data sets",
      "aliases": [
        "primitives for metadata and content extraction from unstructured data sets",
        "primitives for metadata and content extraction from unstructured data sets of heterogeneous formats"
      ],
      "types": [
        "extraction",
        "concept",
        "technology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Techniques or methods used to extract metadata and content from unstructured data sets",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "primitives for metadata and content extraction from unstructured data sets",
          "local_types": [
            "extraction"
          ],
          "iri": "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "primitives for metadata and content extraction from unstructured data sets of heterogeneous formats",
          "local_types": [
            "concept",
            "technology"
          ],
          "iri": "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set-Mention-2"
        }
      ],
      "relevance": 0.5986328125
    },
    "Entity-content_extraction_and_analysis": {
      "node_id": "content_extraction_and_analysis",
      "disambiguation_index": 0,
      "label": "content extraction and analysis",
      "aliases": [
        "content extraction and analysis"
      ],
      "types": [
        "process",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of automatically extracting relevant information from unstructured data sources and analyzing it to identify patterns or insights.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "content extraction and analysis",
          "local_types": [
            "process",
            "methodology"
          ],
          "iri": "Entity-content_extraction_and_analysis-Mention-1"
        }
      ],
      "relevance": 0.5986328125
    },
    "Entity-a_project": {
      "node_id": "a_project",
      "disambiguation_index": 0,
      "label": "a project",
      "aliases": [
        "a project"
      ],
      "types": [
        "project"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The effort or initiative aimed at containerizing and integrating the MEL+TNNT tools.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-6",
          "local_name": "a project",
          "local_types": [
            "project"
          ],
          "iri": "Entity-a_project-Mention-1"
        }
      ],
      "relevance": 0.59033203125
    },
    "Entity-rdf_using_a_variety_of_tool_such_a_j2rm": {
      "node_id": "rdf_using_a_variety_of_tool_such_a_j2rm",
      "disambiguation_index": 0,
      "label": "RDF using a variety of tools such as J2RM",
      "aliases": [
        "RDF using a variety of tools such as J2RM"
      ],
      "types": [
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A tool or set of tools used for mapping JSON files to Resource Description Format (RDF)",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "RDF using a variety of tools such as J2RM",
          "local_types": [
            "format"
          ],
          "iri": "Entity-rdf_using_a_variety_of_tool_such_a_j2rm-Mention-1"
        }
      ],
      "relevance": 0.58935546875
    },
    "Entity-rdf_ready": {
      "node_id": "rdf_ready",
      "disambiguation_index": 0,
      "label": "RDF ready",
      "aliases": [
        "RDF ready"
      ],
      "types": [
        "standard",
        "semantic web",
        "data standard",
        "concept",
        "metadata standard",
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A format that enables data to be represented and shared using semantic web technologies, such as RDF (Resource Description Framework).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "RDF ready",
          "local_types": [
            "standard",
            "semantic web",
            "data standard",
            "concept",
            "metadata standard",
            "format"
          ],
          "iri": "Entity-rdf_ready-Mention-1"
        }
      ],
      "relevance": 0.5888671875
    },
    "Entity-common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type": {
      "node_id": "common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type",
      "disambiguation_index": 0,
      "label": "common file formats that generate the results in JSON structures based on the document object model of each format type",
      "aliases": [
        "common file formats that generate the results in JSON structures based on the document object model of each format type"
      ],
      "types": [
        "file formats",
        "JSON",
        "document object model"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A collection of widely-used file formats that convert their contents into structured JSON data, utilizing the Document Object Model (DOM) for each format type.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "common file formats that generate the results in JSON structures based on the document object model of each format type",
          "local_types": [
            "file formats",
            "JSON",
            "document object model"
          ],
          "iri": "Entity-common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type-Mention-1"
        }
      ],
      "relevance": 0.58154296875
    },
    "Entity-the_content_and_metadata_of_all_supported_file_type": {
      "node_id": "the_content_and_metadata_of_all_supported_file_type",
      "disambiguation_index": 0,
      "label": "the content and metadata of all supported file types",
      "aliases": [
        "the content and metadata of all supported file types"
      ],
      "types": [
        "data",
        "metadata"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of data and its associated metadata, encompassing various file formats.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "the content and metadata of all supported file types",
          "local_types": [
            "data",
            "metadata"
          ],
          "iri": "Entity-the_content_and_metadata_of_all_supported_file_type-Mention-1"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-content-based_information_extraction_task": {
      "node_id": "content-based_information_extraction_task",
      "disambiguation_index": 0,
      "label": "content-based information extraction tasks",
      "aliases": [
        "The metadata and content-based information extraction tasks",
        "content-based information extraction tasks"
      ],
      "types": [
        "process",
        "task",
        "information extraction",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process or task of extracting relevant information from content based on its characteristics, such as text, images, or audio.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "content-based information extraction tasks",
          "local_types": [
            "process",
            "task",
            "algorithm",
            "information extraction"
          ],
          "iri": "Entity-content-based_information_extraction_task-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "The metadata and content-based information extraction tasks",
          "local_types": [
            "task"
          ],
          "iri": "Entity-content-based_information_extraction_task-Mention-2"
        }
      ],
      "relevance": 0.5791015625
    },
    "Entity-metadata": {
      "node_id": "metadata",
      "disambiguation_index": 0,
      "label": "metadata",
      "aliases": [
        "metadata",
        "metadata and content-based information"
      ],
      "types": [
        "details",
        "data",
        "information",
        "content-based information"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of descriptive data or details",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "metadata",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-metadata-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "metadata",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-metadata-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "metadata",
          "local_types": [
            "information",
            "content-based information"
          ],
          "iri": "Entity-metadata-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "metadata",
          "local_types": [
            "information",
            "details"
          ],
          "iri": "Entity-metadata-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "metadata",
          "local_types": [
            "information",
            "data"
          ],
          "iri": "Entity-metadata-Mention-5"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "metadata and content-based information",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-metadata-Mention-6"
        }
      ],
      "relevance": 0.57666015625
    },
    "Entity-text_analysis_task": {
      "node_id": "text_analysis_task",
      "disambiguation_index": 0,
      "label": "text analysis task",
      "aliases": [
        "text analysis task"
      ],
      "types": [
        "information processing",
        "knowledge extraction"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A process of analyzing and extracting information from written content.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "text analysis task",
          "local_types": [
            "information processing",
            "knowledge extraction"
          ],
          "iri": "Entity-text_analysis_task-Mention-1"
        }
      ],
      "relevance": 0.57666015625
    },
    "Entity-the_third_column": {
      "node_id": "the_third_column",
      "disambiguation_index": 0,
      "label": "The third column",
      "aliases": [
        "The third column"
      ],
      "types": [
        "column"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The third column refers to a table or data structure that displays theoretical number of attributes that MEL can extract per document type, along with the average extracted attributes from four use case document sets.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "The third column",
          "local_types": [
            "column"
          ],
          "iri": "Entity-the_third_column-Mention-1"
        }
      ],
      "relevance": 0.57275390625
    },
    "Entity-tnnt": {
      "node_id": "tnnt",
      "disambiguation_index": 0,
      "label": "TNNT",
      "aliases": [
        "TNNT"
      ],
      "types": [
        "technology",
        "system",
        "software",
        "method",
        "model",
        "tool"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A technology, system, software, method, model or tool for mapping data from one format to another.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "TNNT",
          "local_types": [
            "method",
            "tool",
            "software"
          ],
          "iri": "Entity-tnnt-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "TNNT",
          "local_types": [
            "technology",
            "tool",
            "model",
            "software",
            "system"
          ],
          "iri": "Entity-tnnt-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "TNNT",
          "local_types": [
            "technology",
            "tool",
            "system"
          ],
          "iri": "Entity-tnnt-Mention-3"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-nlp_tool_and_ner_model": {
      "node_id": "nlp_tool_and_ner_model",
      "disambiguation_index": 0,
      "label": "NLP tools and NER models",
      "aliases": [
        "NLP tools and NER models"
      ],
      "types": [
        "tools",
        "models"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of software applications that utilize natural language processing (NLP) techniques for named entity recognition (NER)",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "NLP tools and NER models",
          "local_types": [
            "tools",
            "models"
          ],
          "iri": "Entity-nlp_tool_and_ner_model-Mention-1"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-python-based_tool_and_library": {
      "node_id": "python-based_tool_and_library",
      "disambiguation_index": 0,
      "label": "Python-based tools and libraries",
      "aliases": [
        "Python-based tools and libraries"
      ],
      "types": [
        "software",
        "programming resources"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of software tools and programming resources developed using Python, designed to facilitate various tasks or operations.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "Python-based tools and libraries",
          "local_types": [
            "software",
            "programming resources"
          ],
          "iri": "Entity-python-based_tool_and_library-Mention-1"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-metadata_set": {
      "node_id": "metadata_set",
      "disambiguation_index": 0,
      "label": "metadata sets",
      "aliases": [
        "metadata sets"
      ],
      "types": [
        "information",
        "data set",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Collections of structured data or information",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "metadata sets",
          "local_types": [
            "information",
            "data set",
            "data"
          ],
          "iri": "Entity-metadata_set-Mention-1"
        }
      ],
      "relevance": 0.56640625
    },
    "Entity-several_complementary_extraction_method": {
      "node_id": "several_complementary_extraction_method",
      "disambiguation_index": 0,
      "label": "several complementary extraction methods",
      "aliases": [
        "several complementary extraction methods"
      ],
      "types": [
        "algorithm",
        "technique",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of algorithms, techniques, or methodologies used together to extract information from various sources.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "several complementary extraction methods",
          "local_types": [
            "algorithm",
            "technique",
            "methodology"
          ],
          "iri": "Entity-several_complementary_extraction_method-Mention-1"
        }
      ],
      "relevance": 0.56494140625
    },
    "Entity-keyword_extraction": {
      "node_id": "keyword_extraction",
      "disambiguation_index": 0,
      "label": "keyword extraction",
      "aliases": [
        "keyword extraction"
      ],
      "types": [
        "process",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of identifying and extracting relevant keywords from text.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "keyword extraction",
          "local_types": [
            "process",
            "method"
          ],
          "iri": "Entity-keyword_extraction-Mention-1"
        }
      ],
      "relevance": 0.564453125
    },
    "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_": {
      "node_id": "basic_text_analysis_task__pattern_matching_and_keyword_extraction_",
      "disambiguation_index": 0,
      "label": "basic text analysis tasks (pattern matching and keyword extraction)",
      "aliases": [
        "basic text analysis tasks (pattern matching and keyword extraction)",
        "basic text analysis tasks"
      ],
      "types": [
        "task",
        "text analysis",
        "analysis"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Basic text analysis techniques, including pattern matching and keyword extraction.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "basic text analysis tasks (pattern matching and keyword extraction)",
          "local_types": [
            "analysis",
            "text analysis"
          ],
          "iri": "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "basic text analysis tasks",
          "local_types": [
            "task",
            "text analysis"
          ],
          "iri": "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_-Mention-2"
        }
      ],
      "relevance": 0.56298828125
    },
    "Entity-input_document_set": {
      "node_id": "input_document_set",
      "disambiguation_index": 0,
      "label": "input document sets",
      "aliases": [
        "document set",
        "input document sets",
        "heterogeneous document sets"
      ],
      "types": [
        "data set",
        "collection",
        "collection of documents",
        "dataset",
        "file type",
        "data collection",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of documents or data used for a specific purpose",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "input document sets",
          "local_types": [
            "data set",
            "collection of documents"
          ],
          "iri": "Entity-input_document_set-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "document set",
          "local_types": [
            "data",
            "data collection",
            "dataset",
            "file type"
          ],
          "iri": "Entity-input_document_set-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "heterogeneous document sets",
          "local_types": [
            "data set",
            "collection"
          ],
          "iri": "Entity-input_document_set-Mention-3"
        }
      ],
      "relevance": 0.56103515625
    },
    "Entity-tool": {
      "node_id": "tool",
      "disambiguation_index": 0,
      "label": "tool",
      "aliases": [
        "tool"
      ],
      "types": [
        "software tool",
        "software",
        "information extraction system",
        "system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software tool or system designed to extract and process information.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "tool",
          "local_types": [
            "software tool",
            "information extraction system"
          ],
          "iri": "Entity-tool-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "tool",
          "local_types": [
            "software",
            "system"
          ],
          "iri": "Entity-tool-Mention-2"
        }
      ],
      "relevance": 0.560546875
    },
    "Entity-knowledge_graph_construction_pipeline": {
      "node_id": "knowledge_graph_construction_pipeline",
      "disambiguation_index": 0,
      "label": "Knowledge Graph Construction Pipelines",
      "aliases": [
        "Knowledge Graph Construction Pipelines (KGCP)",
        "Knowledge Graph Construction Pipelines"
      ],
      "types": [
        "pipeline",
        "knowledge graph construction",
        "concept",
        "framework",
        "process",
        "methodology"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of processes or procedures used to construct and build a knowledge graph from various data sources.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Knowledge Graph Construction Pipelines",
          "local_types": [
            "concept",
            "framework",
            "pipeline"
          ],
          "iri": "Entity-knowledge_graph_construction_pipeline-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Knowledge Graph Construction Pipelines (KGCP)",
          "local_types": [
            "methodology",
            "knowledge graph construction",
            "process",
            "pipeline"
          ],
          "iri": "Entity-knowledge_graph_construction_pipeline-Mention-2"
        }
      ],
      "relevance": 0.55859375
    },
    "Entity-state-of-the-art_nlp_tool_and_ner_model": {
      "node_id": "state-of-the-art_nlp_tool_and_ner_model",
      "disambiguation_index": 0,
      "label": "state-of-the-art NLP tools and NER models",
      "aliases": [
        "state-of-the-art NLP tools and NER models"
      ],
      "types": [
        "technology",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Advanced software applications for natural language processing (NLP) and named entity recognition (NER)",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "state-of-the-art NLP tools and NER models",
          "local_types": [
            "technology",
            "methodology"
          ],
          "iri": "Entity-state-of-the-art_nlp_tool_and_ner_model-Mention-1"
        }
      ],
      "relevance": 0.5576171875
    },
    "Entity-json_file": {
      "node_id": "json_file",
      "disambiguation_index": 0,
      "label": "JSON files",
      "aliases": [
        "JSON result files",
        "JSON files",
        "JSON file"
      ],
      "types": [
        "structure",
        "data storage",
        "data format",
        "format",
        "output format",
        "data type",
        "data structure",
        "file type",
        "data storage format",
        "file format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of file format used for storing and exchanging structured data",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "JSON files",
          "local_types": [
            "data type",
            "file type",
            "data storage",
            "file format",
            "data storage format",
            "format"
          ],
          "iri": "Entity-json_file-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "JSON file",
          "local_types": [
            "data storage",
            "file format",
            "data structure",
            "output format"
          ],
          "iri": "Entity-json_file-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "JSON file",
          "local_types": [
            "file format",
            "data storage"
          ],
          "iri": "Entity-json_file-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "JSON result files",
          "local_types": [
            "data format",
            "structure",
            "file format"
          ],
          "iri": "Entity-json_file-Mention-4"
        }
      ],
      "relevance": 0.55712890625
    },
    "Entity-xml_output": {
      "node_id": "xml_output",
      "disambiguation_index": 0,
      "label": "XML output",
      "aliases": [
        "XML output"
      ],
      "types": [
        "data format",
        "file type"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A formatted data representation in Extensible Markup Language (XML) format, used to store or transmit structured information.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "XML output",
          "local_types": [
            "data format",
            "file type"
          ],
          "iri": "Entity-xml_output-Mention-1"
        }
      ],
      "relevance": 0.5556640625
    },
    "Entity-document": {
      "node_id": "document",
      "disambiguation_index": 0,
      "label": "document",
      "aliases": [
        "documents",
        "document"
      ],
      "types": [
        "file",
        "information resource",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A written or printed composition, typically in digital form, containing information and data.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "document",
          "local_types": [
            "file",
            "data"
          ],
          "iri": "Entity-document-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "documents",
          "local_types": [
            "data",
            "information resource"
          ],
          "iri": "Entity-document-Mention-2"
        }
      ],
      "relevance": 0.552734375
    },
    "Entity-pattern_matching_and_keyword_extraction": {
      "node_id": "pattern_matching_and_keyword_extraction",
      "disambiguation_index": 0,
      "label": "pattern matching and keyword extraction",
      "aliases": [
        "regular expressions and keyword extraction task",
        "pattern matching and keyword extraction"
      ],
      "types": [
        "method",
        "keyword extraction",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique used to identify specific phrases or words within text data, often involving algorithms that analyze patterns and relationships.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "pattern matching and keyword extraction",
          "local_types": [
            "method",
            "keyword extraction",
            "technique"
          ],
          "iri": "Entity-pattern_matching_and_keyword_extraction-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "regular expressions and keyword extraction task",
          "local_types": [
            "technique"
          ],
          "iri": "Entity-pattern_matching_and_keyword_extraction-Mention-2"
        }
      ],
      "relevance": 0.55126953125
    },
    "Entity-ner_model": {
      "node_id": "ner_model",
      "disambiguation_index": 0,
      "label": "NER models",
      "aliases": [
        "NER models"
      ],
      "types": [
        "algorithm",
        "model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Computer algorithms or systems that identify named entities in unstructured text.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "NER models",
          "local_types": [
            "algorithm",
            "model"
          ],
          "iri": "Entity-ner_model-Mention-1"
        }
      ],
      "relevance": 0.55126953125
    },
    "Entity-machine-readable_format__json_": {
      "node_id": "machine-readable_format__json_",
      "disambiguation_index": 0,
      "label": "machine-readable format (JSON)",
      "aliases": [
        "machine-readable format (JSON)",
        "the results in a machine-readable format (JSON)"
      ],
      "types": [
        "standard",
        "output",
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standardised data interchange format used to represent structured information",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "machine-readable format (JSON)",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-machine-readable_format__json_-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "the results in a machine-readable format (JSON)",
          "local_types": [
            "format",
            "output"
          ],
          "iri": "Entity-machine-readable_format__json_-Mention-2"
        }
      ],
      "relevance": 0.55029296875
    },
    "Entity-kgcp": {
      "node_id": "kgcp",
      "disambiguation_index": 0,
      "label": "KGCP",
      "aliases": [
        "KGCP"
      ],
      "types": [
        "project",
        "task",
        "concept",
        "knowledge graph construction process",
        "methodology"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Knowledge Graph Construction Process",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-5",
          "local_name": "KGCP",
          "local_types": [
            "task",
            "project"
          ],
          "iri": "Entity-kgcp-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "KGCP",
          "local_types": [
            "knowledge graph construction process"
          ],
          "iri": "Entity-kgcp-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "KGCP",
          "local_types": [
            "knowledge graph construction process",
            "methodology"
          ],
          "iri": "Entity-kgcp-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "KGCP",
          "local_types": [
            "concept",
            "project",
            "knowledge graph construction process"
          ],
          "iri": "Entity-kgcp-Mention-4"
        }
      ],
      "relevance": 0.5498046875
    },
    "Entity-nlp_tool": {
      "node_id": "nlp_tool",
      "disambiguation_index": 0,
      "label": "NLP tools",
      "aliases": [
        "NLP tools"
      ],
      "types": [
        "technology",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of technologies or methodologies used for processing, analyzing, and understanding natural language.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "NLP tools",
          "local_types": [
            "technology",
            "methodology"
          ],
          "iri": "Entity-nlp_tool-Mention-1"
        }
      ],
      "relevance": 0.5458984375
    },
    "Entity-text_analysis": {
      "node_id": "text_analysis",
      "disambiguation_index": 0,
      "label": "text analysis",
      "aliases": [
        "the text analysis task",
        "text analysis"
      ],
      "types": [
        "method",
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of examining, analyzing, or interpreting written text to extract meaning, identify patterns, and generate insights.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "text analysis",
          "local_types": [
            "task",
            "method"
          ],
          "iri": "Entity-text_analysis-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "the text analysis task",
          "local_types": [
            "task"
          ],
          "iri": "Entity-text_analysis-Mention-2"
        }
      ],
      "relevance": 0.54541015625
    },
    "Entity-file_format_a_json_object": {
      "node_id": "file_format_a_json_object",
      "disambiguation_index": 0,
      "label": "file formats as JSON objects",
      "aliases": [
        "file formats as JSON objects"
      ],
      "types": [
        "JSON object",
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A representation of digital files using JavaScript Object Notation (JSON) syntax, which defines a specific structure for organizing and storing data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "file formats as JSON objects",
          "local_types": [
            "JSON object",
            "format"
          ],
          "iri": "Entity-file_format_a_json_object-Mention-1"
        }
      ],
      "relevance": 0.544921875
    },
    "Entity-apache_tika": {
      "node_id": "apache_tika",
      "disambiguation_index": 0,
      "label": "Apache Tika",
      "aliases": [
        "Apache Tika"
      ],
      "types": [
        "package",
        "system",
        "project",
        "software",
        "tool"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Apache Tika: A comprehensive, open-source tool for content extraction and analysis.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "Apache Tika",
          "local_types": [
            "tool",
            "system",
            "software"
          ],
          "iri": "Entity-apache_tika-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "Apache Tika",
          "local_types": [
            "package",
            "tool",
            "software",
            "system",
            "project"
          ],
          "iri": "Entity-apache_tika-Mention-2"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-json_result": {
      "node_id": "json_result",
      "disambiguation_index": 0,
      "label": "JSON results",
      "aliases": [
        "JSON results"
      ],
      "types": [
        "data",
        "data format",
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of data formatted according to JavaScript Object Notation (JSON) standards.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "JSON results",
          "local_types": [
            "data",
            "output"
          ],
          "iri": "Entity-json_result-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "JSON results",
          "local_types": [
            "data format",
            "output"
          ],
          "iri": "Entity-json_result-Mention-2"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-json-ld_annotation": {
      "node_id": "json-ld_annotation",
      "disambiguation_index": 0,
      "label": "JSON-LD annotations",
      "aliases": [
        "JSON-LD annotations"
      ],
      "types": [
        "standard",
        "data format",
        "technology",
        "annotation system",
        "ontology",
        "annotation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standardized format used for adding semantic meaning and context to JSON data through the use of ontologies, vocabularies, and other metadata.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "JSON-LD annotations",
          "local_types": [
            "standard",
            "data format",
            "technology",
            "annotation system",
            "ontology",
            "annotation"
          ],
          "iri": "Entity-json-ld_annotation-Mention-1"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-the_one_of_apache_tika": {
      "node_id": "the_one_of_apache_tika",
      "disambiguation_index": 0,
      "label": "the ones of Apache Tika",
      "aliases": [
        "the ones of Apache Tika"
      ],
      "types": [
        "goals"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Extractors or parsers developed by Apache Tika, responsible for extracting metadata from various file formats.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "the ones of Apache Tika",
          "local_types": [
            "goals"
          ],
          "iri": "Entity-the_one_of_apache_tika-Mention-1"
        }
      ],
      "relevance": 0.54345703125
    },
    "Entity-heterogeneous_file_format": {
      "node_id": "heterogeneous_file_format",
      "disambiguation_index": 0,
      "label": "heterogeneous file formats",
      "aliases": [
        "heterogeneous file formats"
      ],
      "types": [
        "format",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of different digital file types with varying structures and contents.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "heterogeneous file formats",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-heterogeneous_file_format-Mention-1"
        }
      ],
      "relevance": 0.541015625
    },
    "Entity-a_complete_and_complex_java-based_general-purpose_system": {
      "node_id": "a_complete_and_complex_java-based_general-purpose_system",
      "disambiguation_index": 0,
      "label": "a complete and complex Java-based general-purpose system",
      "aliases": [
        "a complete and complex Java-based general-purpose system"
      ],
      "types": [
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Apache Tika: a comprehensive and current state-of-the-art tool for content extraction and analysis",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "a complete and complex Java-based general-purpose system",
          "local_types": [
            "system"
          ],
          "iri": "Entity-a_complete_and_complex_java-based_general-purpose_system-Mention-1"
        }
      ],
      "relevance": 0.5400390625
    },
    "Entity-json_structure": {
      "node_id": "json_structure",
      "disambiguation_index": 0,
      "label": "JSON structures",
      "aliases": [
        "JSON structures"
      ],
      "types": [
        "data format",
        "digital representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standardized way to represent data as a collection of key-value pairs, used for storing and exchanging information in digital form.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "JSON structures",
          "local_types": [
            "data format",
            "digital representation"
          ],
          "iri": "Entity-json_structure-Mention-1"
        }
      ],
      "relevance": 0.53857421875
    },
    "Entity-source_document_format": {
      "node_id": "source_document_format",
      "disambiguation_index": 0,
      "label": "source document formats",
      "aliases": [
        "file types/formats",
        "source document formats"
      ],
      "types": [
        "structure",
        "data format",
        "format",
        "data standard",
        "file format",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Types of documents or files with standardized structures, used for encoding and storing data.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "source document formats",
          "local_types": [
            "file format",
            "data standard"
          ],
          "iri": "Entity-source_document_format-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "source document formats",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-source_document_format-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "file types/formats",
          "local_types": [
            "data format",
            "structure"
          ],
          "iri": "Entity-source_document_format-Mention-3"
        }
      ],
      "relevance": 0.53515625
    },
    "Entity-kgcp_task": {
      "node_id": "kgcp_task",
      "disambiguation_index": 0,
      "label": "KGCP tasks",
      "aliases": [
        "KGCP tasks"
      ],
      "types": [
        "research goal",
        "knowledge management task",
        "project goal",
        "research project",
        "task",
        "academic task",
        "project"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Knowledge Graph Construction Pipeline tasks",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-5",
          "local_name": "KGCP tasks",
          "local_types": [
            "research goal",
            "knowledge management task",
            "project goal",
            "research project",
            "task",
            "academic task",
            "project"
          ],
          "iri": "Entity-kgcp_task-Mention-1"
        }
      ],
      "relevance": 0.5322265625
    },
    "Entity-the_most_comprehensive_and_current_state-of-the-art_tool_for_content_extraction_and_analysis": {
      "node_id": "the_most_comprehensive_and_current_state-of-the-art_tool_for_content_extraction_and_analysis",
      "disambiguation_index": 0,
      "label": "the most comprehensive and current state-of-the-art tool for content extraction and analysis",
      "aliases": [
        "the most comprehensive and current state-of-the-art tool for content extraction and analysis"
      ],
      "types": [
        "state-of-the-art tool"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Apache Tika",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "the most comprehensive and current state-of-the-art tool for content extraction and analysis",
          "local_types": [
            "state-of-the-art tool"
          ],
          "iri": "Entity-the_most_comprehensive_and_current_state-of-the-art_tool_for_content_extraction_and_analysis-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-categorised_named_entity": {
      "node_id": "categorised_named_entity",
      "disambiguation_index": 0,
      "label": "categorised named entities",
      "aliases": [
        "categorised named entities"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Named entities that have been categorized, extracted from results by using diverse state-of-the-art NLP tools and NER models.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "categorised named entities",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-categorised_named_entity-Mention-1"
        }
      ],
      "relevance": 0.53125
    },
    "Entity-configuration_json_file": {
      "node_id": "configuration_json_file",
      "disambiguation_index": 0,
      "label": "configuration JSON file",
      "aliases": [
        "configuration JSON file",
        "a detailed configuration JSON file"
      ],
      "types": [
        "configuration",
        "settings",
        "settings file",
        "file type",
        "setting",
        "parameter definition",
        "file format",
        "file",
        "settings document"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A structured document that defines a set of parameters or flags for configuring various aspects of a system or process.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "configuration JSON file",
          "local_types": [
            "settings",
            "settings file",
            "file type",
            "setting",
            "parameter definition",
            "file format",
            "settings document"
          ],
          "iri": "Entity-configuration_json_file-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "a detailed configuration JSON file",
          "local_types": [
            "file",
            "configuration"
          ],
          "iri": "Entity-configuration_json_file-Mention-2"
        }
      ],
      "relevance": 0.5302734375
    },
    "Entity-source_document": {
      "node_id": "source_document",
      "disambiguation_index": 0,
      "label": "source document",
      "aliases": [
        "source document"
      ],
      "types": [
        "document",
        "textual content"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A written or printed work that contains text",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "source document",
          "local_types": [
            "document",
            "textual content"
          ],
          "iri": "Entity-source_document-Mention-1"
        }
      ],
      "relevance": 0.52734375
    },
    "Entity-whilst_the_fourth_column_show": {
      "node_id": "whilst_the_fourth_column_show",
      "disambiguation_index": 0,
      "label": "whilst the fourth column shows",
      "aliases": [
        "whilst the fourth column shows"
      ],
      "types": [
        "column"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The average number of extracted attributes per document type, based on data from four use case document sets.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "whilst the fourth column shows",
          "local_types": [
            "column"
          ],
          "iri": "Entity-whilst_the_fourth_column_show-Mention-1"
        }
      ],
      "relevance": 0.52685546875
    },
    "Entity-file_type": {
      "node_id": "file_type",
      "disambiguation_index": 0,
      "label": "file types",
      "aliases": [
        "file types",
        "file type"
      ],
      "types": [
        "data format",
        "format",
        "data type",
        "digital content",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A classification or categorization of digital content",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "file types",
          "local_types": [
            "data type",
            "format"
          ],
          "iri": "Entity-file_type-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "file type",
          "local_types": [
            "format",
            "data structure"
          ],
          "iri": "Entity-file_type-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-6",
          "local_name": "file types",
          "local_types": [
            "data format",
            "format"
          ],
          "iri": "Entity-file_type-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "file types",
          "local_types": [
            "data format",
            "digital content"
          ],
          "iri": "Entity-file_type-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "file type",
          "local_types": [
            "data format"
          ],
          "iri": "Entity-file_type-Mention-5"
        }
      ],
      "relevance": 0.52490234375
    },
    "Entity-mel_s_core_goal": {
      "node_id": "mel_s_core_goal",
      "disambiguation_index": 0,
      "label": "MEL's core goals",
      "aliases": [
        "MEL's core goals"
      ],
      "types": [
        "goals"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The core objectives or purposes of MEL, which define its primary motivations and directions.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "MEL's core goals",
          "local_types": [
            "goals"
          ],
          "iri": "Entity-mel_s_core_goal-Mention-1"
        }
      ],
      "relevance": 0.52490234375
    },
    "Entity-j2rm": {
      "node_id": "j2rm",
      "disambiguation_index": 0,
      "label": "J2RM",
      "aliases": [
        "J2RM"
      ],
      "types": [
        "toolkit",
        "software",
        "reference",
        "library",
        "framework",
        "RDF mapping software",
        "tool",
        "resource",
        "software library"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "RDF mapping software",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "J2RM",
          "local_types": [
            "RDF mapping software",
            "tool",
            "software"
          ],
          "iri": "Entity-j2rm-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "J2RM",
          "local_types": [
            "toolkit",
            "tool",
            "library",
            "software",
            "framework",
            "resource",
            "software library",
            "reference"
          ],
          "iri": "Entity-j2rm-Mention-2"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-regular_expression": {
      "node_id": "regular_expression",
      "disambiguation_index": 0,
      "label": "regular expressions",
      "aliases": [
        "regular expressions",
        "regular expressions to apply in the text analysis task"
      ],
      "types": [
        "pattern matching",
        "text processing",
        "pattern recognition",
        "algorithm",
        "text analysis technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of patterns used for string matching and searching, allowing for the definition of complex search criteria using syntax-specific rules.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "regular expressions",
          "local_types": [
            "text analysis technique",
            "pattern matching",
            "pattern recognition",
            "algorithm"
          ],
          "iri": "Entity-regular_expression-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "regular expressions to apply in the text analysis task",
          "local_types": [
            "pattern matching",
            "text processing"
          ],
          "iri": "Entity-regular_expression-Mention-2"
        }
      ],
      "relevance": 0.5234375
    },
    "Entity-pre-processing_and_data_cleaning_task": {
      "node_id": "pre-processing_and_data_cleaning_task",
      "disambiguation_index": 0,
      "label": "pre-processing and data cleaning tasks",
      "aliases": [
        "specific pre-processing and data cleaning tasks",
        "pre-processing and data cleaning tasks"
      ],
      "types": [
        "preprocessing",
        "process",
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of operations performed to prepare and refine raw data for further analysis or processing.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "pre-processing and data cleaning tasks",
          "local_types": [
            "process",
            "task"
          ],
          "iri": "Entity-pre-processing_and_data_cleaning_task-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "specific pre-processing and data cleaning tasks",
          "local_types": [
            "task",
            "preprocessing"
          ],
          "iri": "Entity-pre-processing_and_data_cleaning_task-Mention-2"
        }
      ],
      "relevance": 0.52294921875
    },
    "Entity-opensource_package_and_tool_with_complementary_capability": {
      "node_id": "opensource_package_and_tool_with_complementary_capability",
      "disambiguation_index": 0,
      "label": "opensource packages and tools with complementary capabilities",
      "aliases": [
        "opensource packages and tools with complementary capabilities"
      ],
      "types": [
        "toolset",
        "software"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of open-source software packages and tools that offer complementary capabilities",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "opensource packages and tools with complementary capabilities",
          "local_types": [
            "toolset",
            "software"
          ],
          "iri": "Entity-opensource_package_and_tool_with_complementary_capability-Mention-1"
        }
      ],
      "relevance": 0.5224609375
    },
    "Entity-json_object": {
      "node_id": "json_object",
      "disambiguation_index": 0,
      "label": "JSON objects",
      "aliases": [
        "JSON objects"
      ],
      "types": [
        "format",
        "data structure",
        "object"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of data structure used for exchanging structured data between web servers, applications, and other systems.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "JSON objects",
          "local_types": [
            "format",
            "data structure",
            "object"
          ],
          "iri": "Entity-json_object-Mention-1"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-file_format": {
      "node_id": "file_format",
      "disambiguation_index": 0,
      "label": "file formats",
      "aliases": [
        "file formats",
        "common file formats"
      ],
      "types": [
        "data format",
        "file types",
        "format",
        "document structures",
        "standard",
        "file formats"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Standardized ways of organizing digital data for storage, transmission, or processing",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "file formats",
          "local_types": [
            "standard",
            "format"
          ],
          "iri": "Entity-file_format-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-5",
          "local_name": "file formats",
          "local_types": [
            "data format"
          ],
          "iri": "Entity-file_format-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "common file formats",
          "local_types": [
            "file formats"
          ],
          "iri": "Entity-file_format-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "common file formats",
          "local_types": [
            "file types",
            "document structures"
          ],
          "iri": "Entity-file_format-Mention-4"
        }
      ],
      "relevance": 0.52001953125
    },
    "Entity-json": {
      "node_id": "json",
      "disambiguation_index": 0,
      "label": "JSON",
      "aliases": [
        "JSON"
      ],
      "types": [
        "format",
        "data format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A lightweight data interchange format used to store and exchange structured data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "JSON",
          "local_types": [
            "format",
            "data format"
          ],
          "iri": "Entity-json-Mention-1"
        }
      ],
      "relevance": 0.5185546875
    },
    "Entity-json-ld": {
      "node_id": "json-ld",
      "disambiguation_index": 0,
      "label": "JSON-LD",
      "aliases": [
        "JSON-LD"
      ],
      "types": [
        "ontology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A semantic extension to JavaScript Object Notation (JSON) for expressing structured data and schema information.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-4",
          "local_name": "JSON-LD",
          "local_types": [
            "ontology"
          ],
          "iri": "Entity-json-ld-Mention-1"
        }
      ],
      "relevance": 0.51806640625
    },
    "Entity-processing_model": {
      "node_id": "processing_model",
      "disambiguation_index": 0,
      "label": "processing model",
      "aliases": [
        "processing model"
      ],
      "types": [
        "algorithm",
        "computational process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual framework or set of rules governing how data is transformed and analyzed to produce a desired outcome.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "processing model",
          "local_types": [
            "algorithm",
            "computational process"
          ],
          "iri": "Entity-processing_model-Mention-1"
        }
      ],
      "relevance": 0.51220703125
    },
    "Entity-unstructured_data_set": {
      "node_id": "unstructured_data_set",
      "disambiguation_index": 0,
      "label": "unstructured data sets",
      "aliases": [
        "unstructured data sets",
        "unstructured data sets of heterogeneous formats"
      ],
      "types": [
        "data set",
        "collection",
        "format",
        "collection of data",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of data that lacks a predefined structure or organization.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "unstructured data sets",
          "local_types": [
            "dataset",
            "collection"
          ],
          "iri": "Entity-unstructured_data_set-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "unstructured data sets",
          "local_types": [
            "dataset",
            "collection of data"
          ],
          "iri": "Entity-unstructured_data_set-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "unstructured data sets of heterogeneous formats",
          "local_types": [
            "data set",
            "format"
          ],
          "iri": "Entity-unstructured_data_set-Mention-3"
        }
      ],
      "relevance": 0.5107421875
    },
    "Entity-python-based_tool": {
      "node_id": "python-based_tool",
      "disambiguation_index": 0,
      "label": "Python-based tool",
      "aliases": [
        "Python-based tool"
      ],
      "types": [
        "software development platform",
        "software development framework",
        "programming language"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software development platform or framework written in Python, used for programming.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "Python-based tool",
          "local_types": [
            "software development platform",
            "software development framework",
            "programming language"
          ],
          "iri": "Entity-python-based_tool-Mention-1"
        }
      ],
      "relevance": 0.51025390625
    },
    "Entity-python-based_system": {
      "node_id": "python-based_system",
      "disambiguation_index": 0,
      "label": "Python-based system",
      "aliases": [
        "Python-based system"
      ],
      "types": [
        "software framework",
        "programming language"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software framework or programming language-based system that provides a set of tools, libraries, and utilities for developing applications.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "Python-based system",
          "local_types": [
            "software framework",
            "programming language"
          ],
          "iri": "Entity-python-based_system-Mention-1"
        }
      ],
      "relevance": 0.51025390625
    },
    "Entity-unstructured_information": {
      "node_id": "unstructured_information",
      "disambiguation_index": 0,
      "label": "unstructured information",
      "aliases": [
        "unstructured information",
        "unstructured information encoded in different source document formats"
      ],
      "types": [
        "information structure",
        "data format",
        "information",
        "text data",
        "content"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Information that lacks organization or structure, often requiring manual processing or analysis.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "unstructured information",
          "local_types": [
            "text data",
            "content"
          ],
          "iri": "Entity-unstructured_information-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "unstructured information encoded in different source document formats",
          "local_types": [
            "data format",
            "information",
            "information structure"
          ],
          "iri": "Entity-unstructured_information-Mention-2"
        }
      ],
      "relevance": 0.509765625
    },
    "Entity-rdf": {
      "node_id": "rdf",
      "disambiguation_index": 0,
      "label": "RDF",
      "aliases": [
        "RDF"
      ],
      "types": [
        "standard",
        "technology",
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standard format for representing data on the web",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "RDF",
          "local_types": [
            "standard",
            "technology"
          ],
          "iri": "Entity-rdf-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "RDF",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-rdf-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "RDF",
          "local_types": [
            "standard",
            "format"
          ],
          "iri": "Entity-rdf-Mention-3"
        }
      ],
      "relevance": 0.50927734375
    },
    "Entity-pre-processing_task": {
      "node_id": "pre-processing_task",
      "disambiguation_index": 0,
      "label": "pre-processing tasks",
      "aliases": [
        "pre-processing tasks"
      ],
      "types": [
        "task",
        "process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of operations performed to prepare data for further processing or analysis.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "pre-processing tasks",
          "local_types": [
            "task",
            "process"
          ],
          "iri": "Entity-pre-processing_task-Mention-1"
        }
      ],
      "relevance": 0.50927734375
    },
    "Entity-kgcps__such_a_the_one_described_in__6____2___and__3_": {
      "node_id": "kgcps__such_a_the_one_described_in__6____2___and__3_",
      "disambiguation_index": 0,
      "label": "KGCPs, such as the ones described in [6], [2], and [3]",
      "aliases": [
        "KGCPs, such as the ones described in [6], [2], and [3]"
      ],
      "types": [
        "projects"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Knowledge Graph Construction Pipelines",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "KGCPs, such as the ones described in [6], [2], and [3]",
          "local_types": [
            "projects"
          ],
          "iri": "Entity-kgcps__such_a_the_one_described_in__6____2___and__3_-Mention-1"
        }
      ],
      "relevance": 0.50830078125
    },
    "Entity-pattern_matching": {
      "node_id": "pattern_matching",
      "disambiguation_index": 0,
      "label": "pattern matching",
      "aliases": [
        "pattern matching"
      ],
      "types": [
        "technique",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique or algorithm used to identify and match specific patterns, often in text data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "pattern matching",
          "local_types": [
            "technique",
            "algorithm"
          ],
          "iri": "Entity-pattern_matching-Mention-1"
        }
      ],
      "relevance": 0.5078125
    },
    "Entity-table_2": {
      "node_id": "table_2",
      "disambiguation_index": 0,
      "label": "Table 2",
      "aliases": [
        "Table 2"
      ],
      "types": [
        "data structure",
        "file type listing",
        "reference table",
        "table",
        "table reference",
        "file types supported",
        "table format",
        "reference"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A table providing a list of supported file types",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-6",
          "local_name": "Table 2",
          "local_types": [
            "data structure",
            "file type listing",
            "reference table",
            "table",
            "table reference",
            "file types supported",
            "table format",
            "reference"
          ],
          "iri": "Entity-table_2-Mention-1"
        }
      ],
      "relevance": 0.50634765625
    },
    "Entity-python-based_method": {
      "node_id": "python-based_method",
      "disambiguation_index": 0,
      "label": "Python-based methods",
      "aliases": [
        "Python-based methods"
      ],
      "types": [
        "programming techniques",
        "algorithm",
        "programming language"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Programming techniques or algorithms that utilize the programming language Python.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "Python-based methods",
          "local_types": [
            "programming techniques",
            "algorithm",
            "programming language"
          ],
          "iri": "Entity-python-based_method-Mention-1"
        }
      ],
      "relevance": 0.50537109375
    },
    "Entity-proper_tool": {
      "node_id": "proper_tool",
      "disambiguation_index": 0,
      "label": "proper tools",
      "aliases": [
        "proper tools"
      ],
      "types": [
        "software",
        "technology",
        "resource"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Specialized equipment or software designed for specific purposes, providing efficient and effective means of accomplishing tasks.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "proper tools",
          "local_types": [
            "software",
            "technology",
            "resource"
          ],
          "iri": "Entity-proper_tool-Mention-1"
        }
      ],
      "relevance": 0.50390625
    },
    "Entity-file_extension_mapping": {
      "node_id": "file_extension_mapping",
      "disambiguation_index": 0,
      "label": "file extension mappings",
      "aliases": [
        "file extension mappings"
      ],
      "types": [
        "conversion table",
        "mapping",
        "format conversion",
        "mapping table"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A table or database that maps file extensions to their corresponding formats",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "file extension mappings",
          "local_types": [
            "conversion table",
            "mapping",
            "format conversion",
            "mapping table"
          ],
          "iri": "Entity-file_extension_mapping-Mention-1"
        }
      ],
      "relevance": 0.5009765625
    },
    "Entity-file_type_are_presented_in_table_2": {
      "node_id": "file_type_are_presented_in_table_2",
      "disambiguation_index": 0,
      "label": "file types are presented in Table 2",
      "aliases": [
        "file types are presented in Table 2"
      ],
      "types": [
        "reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A list of file formats or extensions that can be processed, stored, or used by a system or application.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-6",
          "local_name": "file types are presented in Table 2",
          "local_types": [
            "reference"
          ],
          "iri": "Entity-file_type_are_presented_in_table_2-Mention-1"
        }
      ],
      "relevance": 0.50048828125
    },
    "Entity-document_store": {
      "node_id": "document_store",
      "disambiguation_index": 0,
      "label": "document store",
      "aliases": [
        "document store"
      ],
      "types": [
        "database system",
        "database",
        "data storage",
        "system",
        "store",
        "repository",
        "storage system",
        "concept",
        "storage solution"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A digital repository for storing and managing documents.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "document store",
          "local_types": [
            "storage solution",
            "database system",
            "concept",
            "system",
            "storage system",
            "store"
          ],
          "iri": "Entity-document_store-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "document store",
          "local_types": [
            "database system",
            "repository",
            "data storage",
            "storage system",
            "database"
          ],
          "iri": "Entity-document_store-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "document store",
          "local_types": [
            "database",
            "repository"
          ],
          "iri": "Entity-document_store-Mention-3"
        }
      ],
      "relevance": 0.499267578125
    },
    "Entity-document_type": {
      "node_id": "document_type",
      "disambiguation_index": 0,
      "label": "document type",
      "aliases": [
        "document type"
      ],
      "types": [
        "category",
        "classification"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A classification or categorization scheme used to classify and organize documents based on their characteristics, structure, or content.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "document type",
          "local_types": [
            "category",
            "classification"
          ],
          "iri": "Entity-document_type-Mention-1"
        }
      ],
      "relevance": 0.49560546875
    },
    "Entity-method": {
      "node_id": "method",
      "disambiguation_index": 0,
      "label": "methods",
      "aliases": [
        "methods"
      ],
      "types": [
        "algorithm",
        "process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of algorithms or processes used for achieving a specific goal",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "methods",
          "local_types": [
            "algorithm",
            "process"
          ],
          "iri": "Entity-method-Mention-1"
        }
      ],
      "relevance": 0.492919921875
    },
    "Entity-ole": {
      "node_id": "ole",
      "disambiguation_index": 0,
      "label": "OLE",
      "aliases": [
        "OLE"
      ],
      "types": [
        "file format",
        "format",
        "file type"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A proprietary file format or data structure",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-9",
          "local_name": "OLE",
          "local_types": [
            "file format",
            "format",
            "file type"
          ],
          "iri": "Entity-ole-Mention-1"
        }
      ],
      "relevance": 0.490966796875
    },
    "Entity-named_entity": {
      "node_id": "named_entity",
      "disambiguation_index": 0,
      "label": "named entities",
      "aliases": [
        "named entities"
      ],
      "types": [
        "concept",
        "entities",
        "term",
        "data entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or set of identified concepts, things, or ideas",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "named entities",
          "local_types": [
            "entities",
            "data entity"
          ],
          "iri": "Entity-named_entity-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "named entities",
          "local_types": [
            "concept",
            "term"
          ],
          "iri": "Entity-named_entity-Mention-2"
        }
      ],
      "relevance": 0.488037109375
    },
    "Entity-third_column": {
      "node_id": "third_column",
      "disambiguation_index": 0,
      "label": "third column",
      "aliases": [
        "third column"
      ],
      "types": [
        "column",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A vertical division or section in a structured data arrangement, typically used to organize and display information.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "third column",
          "local_types": [
            "column",
            "data structure"
          ],
          "iri": "Entity-third_column-Mention-1"
        }
      ],
      "relevance": 0.48583984375
    },
    "Entity-table_1": {
      "node_id": "table_1",
      "disambiguation_index": 0,
      "label": "Table 1",
      "aliases": [
        "Table 1"
      ],
      "types": [
        "data structure",
        "reference table",
        "table",
        "output structure",
        "table format",
        "reference"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A table presenting reference information or data.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "Table 1",
          "local_types": [
            "data structure",
            "reference table",
            "table",
            "output structure",
            "table format",
            "reference"
          ],
          "iri": "Entity-table_1-Mention-1"
        }
      ],
      "relevance": 0.484619140625
    },
    "Entity-ontology": {
      "node_id": "ontology",
      "disambiguation_index": 0,
      "label": "ontologies",
      "aliases": [
        "ontologies"
      ],
      "types": [
        "data model",
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of formal representations that define a common understanding of concepts and relationships, used to reason about knowledge.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-4",
          "local_name": "ontologies",
          "local_types": [
            "data model",
            "knowledge representation"
          ],
          "iri": "Entity-ontology-Mention-1"
        }
      ],
      "relevance": 0.484619140625
    },
    "Entity-primitive": {
      "node_id": "primitive",
      "disambiguation_index": 0,
      "label": "primitives",
      "aliases": [
        "primitives"
      ],
      "types": [
        "algorithm",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Basic building blocks or fundamental operations used to perform a specific task",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "primitives",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-primitive-Mention-1"
        }
      ],
      "relevance": 0.467529296875
    },
    "Entity-_6_": {
      "node_id": "_6_",
      "disambiguation_index": 0,
      "label": "[6]",
      "aliases": [
        "[3]",
        "[2]",
        "[6]"
      ],
      "types": [
        "reference",
        "citation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A research paper or publication",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "[6]",
          "local_types": [
            "citation",
            "reference"
          ],
          "iri": "Entity-_6_-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "[2]",
          "local_types": [
            "citation",
            "reference"
          ],
          "iri": "Entity-_6_-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "[3]",
          "local_types": [
            "citation",
            "reference"
          ],
          "iri": "Entity-_6_-Mention-3"
        }
      ],
      "relevance": 0.460693359375
    },
    "Entity-theoretical_number_of_attribute": {
      "node_id": "theoretical_number_of_attribute",
      "disambiguation_index": 0,
      "label": "theoretical number of attributes",
      "aliases": [
        "theoretical number of attributes"
      ],
      "types": [
        "quantity",
        "statistic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical value representing an estimated or predicted quantity of characteristics, features, or properties that can be extracted from a given dataset.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "theoretical number of attributes",
          "local_types": [
            "quantity",
            "statistic"
          ],
          "iri": "Entity-theoretical_number_of_attribute-Mention-1"
        }
      ],
      "relevance": 0.460693359375
    },
    "Entity-opensource_package_and_tool": {
      "node_id": "opensource_package_and_tool",
      "disambiguation_index": 0,
      "label": "opensource packages and tools",
      "aliases": [
        "opensource packages and tools"
      ],
      "types": [
        "development framework",
        "technology",
        "software library",
        "software"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of software libraries, frameworks, or tools that are freely available for use, modification, and distribution under an open-source license.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "opensource packages and tools",
          "local_types": [
            "development framework",
            "technology",
            "software library",
            "software"
          ],
          "iri": "Entity-opensource_package_and_tool-Mention-1"
        }
      ],
      "relevance": 0.45751953125
    },
    "Entity-.docm_can_only_be_processed_on_window_operating_system": {
      "node_id": ".docm_can_only_be_processed_on_window_operating_system",
      "disambiguation_index": 0,
      "label": ".docm can only be processed on Windows operating systems",
      "aliases": [
        ".docm can only be processed on Windows operating systems"
      ],
      "types": [
        "software requirement",
        "operating system"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific type of Microsoft Office document that requires a Windows operating system to process.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-8",
          "local_name": ".docm can only be processed on Windows operating systems",
          "local_types": [
            "software requirement",
            "operating system"
          ],
          "iri": "Entity-.docm_can_only_be_processed_on_window_operating_system-Mention-1"
        }
      ],
      "relevance": 0.45703125
    },
    "Entity-.docm": {
      "node_id": ".docm",
      "disambiguation_index": 0,
      "label": ".docm",
      "aliases": [
        ".docm"
      ],
      "types": [
        "file type"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A Microsoft Word document",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-8",
          "local_name": ".docm",
          "local_types": [
            "file type"
          ],
          "iri": "Entity-.docm-Mention-1"
        }
      ],
      "relevance": 0.455322265625
    },
    "Entity-vocabulary_or_light-weight_ontology": {
      "node_id": "vocabulary_or_light-weight_ontology",
      "disambiguation_index": 0,
      "label": "vocabulary or light-weight ontology",
      "aliases": [
        "vocabulary or light-weight ontology"
      ],
      "types": [
        "knowledge representation",
        "ontology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A formal, standardized set of concepts and terms used for knowledge representation and organization.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "vocabulary or light-weight ontology",
          "local_types": [
            "knowledge representation",
            "ontology"
          ],
          "iri": "Entity-vocabulary_or_light-weight_ontology-Mention-1"
        }
      ],
      "relevance": 0.452392578125
    },
    "Entity-project": {
      "node_id": "project",
      "disambiguation_index": 0,
      "label": "project",
      "aliases": [
        "project"
      ],
      "types": [
        "research program",
        "initiative"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research program or initiative aimed at achieving specific goals, objectives, and outcomes.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-6",
          "local_name": "project",
          "local_types": [
            "research program",
            "initiative"
          ],
          "iri": "Entity-project-Mention-1"
        }
      ],
      "relevance": 0.44482421875
    },
    "Entity-window": {
      "node_id": "window",
      "disambiguation_index": 0,
      "label": "Windows",
      "aliases": [
        "Windows"
      ],
      "types": [
        "operating system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A graphical user interface (GUI) environment developed by Microsoft, used for interacting with a computer.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-8",
          "local_name": "Windows",
          "local_types": [
            "operating system"
          ],
          "iri": "Entity-window-Mention-1"
        }
      ],
      "relevance": 0.432861328125
    },
    "Entity-parameter_and_flag": {
      "node_id": "parameter_and_flag",
      "disambiguation_index": 0,
      "label": "parameters and flags",
      "aliases": [
        "parameters and flags"
      ],
      "types": [
        "processing settings",
        "configuration settings",
        "initial settings",
        "setting",
        "options",
        "option",
        "processing options",
        "control variables"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of configuration options or variables that control the initial setup or parameters for a processing system.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "parameters and flags",
          "local_types": [
            "processing settings",
            "configuration settings",
            "initial settings",
            "setting",
            "options",
            "option",
            "processing options",
            "control variables"
          ],
          "iri": "Entity-parameter_and_flag-Mention-1"
        }
      ],
      "relevance": 0.41552734375
    },
    "Entity-result": {
      "node_id": "result",
      "disambiguation_index": 0,
      "label": "results",
      "aliases": [
        "TNNT results",
        "results"
      ],
      "types": [
        "result",
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The outcome or product of an operation, process, or experiment.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "results",
          "local_types": [
            "output"
          ],
          "iri": "Entity-result-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "TNNT results",
          "local_types": [
            "result",
            "output"
          ],
          "iri": "Entity-result-Mention-2"
        }
      ],
      "relevance": 0.407958984375
    },
    "Entity-task": {
      "node_id": "task",
      "disambiguation_index": 0,
      "label": "tasks",
      "aliases": [
        "tasks"
      ],
      "types": [
        "task",
        "activity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A task or activity, typically requiring effort or time to complete.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "tasks",
          "local_types": [
            "task",
            "activity"
          ],
          "iri": "Entity-task-Mention-1"
        }
      ],
      "relevance": 0.407470703125
    },
    "Entity-figure_2": {
      "node_id": "figure_2",
      "disambiguation_index": 0,
      "label": "Figure 2",
      "aliases": [
        "Figure 2"
      ],
      "types": [
        "visual representation",
        "image"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A visual representation, typically an image or diagram.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-5",
          "local_name": "Figure 2",
          "local_types": [
            "visual representation",
            "image"
          ],
          "iri": "Entity-figure_2-Mention-1"
        }
      ],
      "relevance": 0.398193359375
    },
    "Entity-the_near_future": {
      "node_id": "the_near_future",
      "disambiguation_index": 0,
      "label": "the near future",
      "aliases": [
        "the near future"
      ],
      "types": [
        "timeframe",
        "future"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The time period immediately ahead, which has not yet arrived but is expected to happen soon.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-4",
          "local_name": "the near future",
          "local_types": [
            "timeframe",
            "future"
          ],
          "iri": "Entity-the_near_future-Mention-1"
        }
      ],
      "relevance": 0.38671875
    }
  },
  "summary": "The metadata and content-based information extraction tasks from heterogeneous file sets are pre-processing steps of many Knowledge Graph Construction Pipelines (KGCP). These tasks often take longer than necessary due to the lack of proper tools that integrate several complementary extraction methods and properties to get a rich output set. This paper presents MEL, a Python-based tool that implements a set of methods to extract metadata and content-based information from unstructured information encoded in different source document formats. The results are generated as JSON files, which can: (a) optionally be stored in a document store, and (b) easily be mapped to RDF using a variety of tools such as J2RM. MEL supports more than 20 different file types, making it a versatile tool that aids pre-processing tasks as part of a KGCP based on comprehensive configurable settings.\n\nThis paper introduces MEL, a tool that implements a set of methods to extract metadata and content-based information from various file formats as JSON objects. For each supported file type, MEL extracts the textual content from the source document and performs specific pre-processing and data cleaning tasks. Also, it performs basic text analysis tasks (pattern matching and keyword extraction) and generates the results in a machine-readable format (JSON), preparing the ground for content-based analysis. MEL is integrated with \u201cThe NLP -NER Toolkit\u201d (TNNT), which automates the extraction task of categorised named entities from the MEL results by using diverse state-of-the-art NLP tools and NER models [5]. MEL implements primitives for metadata and content extraction from unstructured data sets of heterogeneous formats, and along with the TNNT results, it provides the groundwork for content-based analysis. MEL and TNNT were developed in conjunction with J2RM [4], to easily map the JSON results to RDF as part of an automated KGCP.\n\nMEL has comprehensive metadata extraction support of various file types and formats. In a nutshell: (1) it takes as input a document (file) set; (2) then, for each document, it extracts its related metadata and content-based information, while performing basic text analysis (such as applying a configurable set of regular expressions and keyword extraction task); and, (3) as output, it generates a JSON file with the extracted metadata and text content with a structure based on the supported formats' document object model. It can store the results in a document store. MEL's general output structure is presented in Table 1. MEL has a detailed configuration JSON file that defines how the processing will be performed through a set of parameters and flags that establish the initial settings related to the document store, input document sets, TNNT general configuration, file extension mappings, the \u201cAssociated-Metadata\u201d processing (Table 1), and regular expressions to apply in the text analysis task, among other settings. The supported file types are presented in Table 2. The third column shows the theoretical number of attributes that the tool is able to extract per document type, whilst the fourth column shows the average of the extracted attributes from four use case document sets. OLE 2 file types and .docm can only be processed on Windows operating systems. Specifically for OLE 2 file types, MEL uses the olemeta tool.\n\nMEL is fully integrated with TNNT as depicted in Figure 1. The set of Python-based methods implemented in MEL are generic and can be applied to extract the content and metadata of all supported file types. MEL uses various opensource packages and tools with complementary capabilities to form a \u201cSwiss army knife\u201d of metadata and content-based information extraction from heterogeneous document sets. As part of the \u201cGeneral-Metadata\u201d extraction task, MEL optionally uses the XML output from the NLNZ Metadata Extractor tool, a Java standalone tool that extracts a comprehensive attribute and property list from dozens of file formats. The MEL general processing model is presented in Figure 2. It is important to note that each file type has its own specific processing model as well as the text analysis task, which is the last step that is performed for any output.\n\nThe most comprehensive and current state-of-the-art tool for content extraction and analysis is Apache Tika, which is a complete and complex Java-based general-purpose system. While MEL's core goals resemble the ones of Apache Tika, the main difference and benefit of MEL as compared to Apache Tika is that it is a lightweight Python-based package for the metadata extraction of common file formats aimed to be used in a KGCP. Although there is a wide range of Python-based tools and libraries for metadata extraction, to the best of our knowledge, there is no package available that fully integrates in one system a comprehensive set of methods for metadata and content extraction of common file formats that generate the results in JSON structures based on the document object model of each format type. Last, MEL can assist in the information extraction stage of several KGCPs, such as the ones described in [6], [2], and [3].\n\nMEL provides a versatile mechanism to extract metadata and content-based information from unstructured data sets of heterogeneous file formats, agnostic of the data sets' domain (general purpose). It has been tested over thousands of documents using different formats and datasets as part of the AGRIF project. Based on the structure of the MEL's JSON results, it is possible to easily add a vocabulary or light-weight ontology using JSON-LD annotations, in order to make the extracted metadata \u201cRDF ready\u201d. This will be explored in the near future leveraging on the integration with JSON-LD ontologies. More file formats will be added in a per use-case requirements basis, in order to support KGCP tasks. Additionally, a project to \u201ccontainerise\u201d the MEL+TNNT tools is planned in the near future. The major contributions of this tool are: (1) the ability to extract metadata sets and content-based information from different source document formats; (2) the comprehensive support of over 20 different file types/formats integrated into one easy-to-use Python-based system; (3) integration with TNNT which automates the extraction of categorised named entities from the results by using diverse state-of-the-art NLP tools and NER models; and (4) the JSON result files can be easily mapped to RDF using J2RM.",
  "triples": [
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-mel"
    ],
    [
      "Entity-the_result",
      "Predicate-are_generated_as",
      "Entity-json_file"
    ],
    [
      "Entity-json_file",
      "Predicate-can_be_mapped_to",
      "Entity-rdf_using_a_variety_of_tool_such_a_j2rm"
    ],
    [
      "Entity-mel",
      "Predicate-supports",
      "Entity-more_than_20_different_file_type"
    ],
    [
      "Entity-this_paper",
      "Predicate-introduces",
      "Entity-mel"
    ],
    [
      "Entity-for_each_supported_file_type",
      "Predicate-performs",
      "Entity-pre-processing_and_data_cleaning_task"
    ],
    [
      "Entity-mel",
      "Predicate-performs",
      "Entity-pre-processing_and_data_cleaning_task"
    ],
    [
      "Entity-text_analysis",
      "Predicate-performs",
      "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_"
    ],
    [
      "Entity-pattern_matching",
      "Predicate-and",
      "Entity-keyword_extraction"
    ],
    [
      "Entity-it",
      "Predicate-generates",
      "Entity-machine-readable_format__json_"
    ],
    [
      "Entity-mel",
      "Predicate-implements",
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set"
    ],
    [
      "Entity-mel",
      "Predicate-developed_in_conjunction_with",
      "Entity-j2rm"
    ],
    [
      "Entity-tnnt",
      "Predicate-developed_in_conjunction_with",
      "Entity-j2rm"
    ],
    [
      "Entity-mel",
      "Predicate-has",
      "Entity-metadata_extraction_support"
    ],
    [
      "Entity-it_(1)",
      "Predicate-takes",
      "Entity-four_use_case_document_set"
    ],
    [
      "Entity-each_document",
      "Predicate-extracts",
      "Entity-content-based_information"
    ],
    [
      "Entity-it_(1)",
      "Predicate-performs",
      "Entity-basic_text_analysis__such_a_applying_a_configurable_set_of_regular_expression_and_keyword_extraction_task_"
    ],
    [
      "Entity-it_(1)",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-it_(1)",
      "Predicate-takes_as_input_a_document_set",
      "Entity-four_use_case_document_set"
    ],
    [
      "Entity-it",
      "Predicate-can_store",
      "Entity-the_result"
    ],
    [
      "Entity-it",
      "Predicate-store",
      "Entity-a_document_store"
    ],
    [
      "Entity-it_(1)",
      "Predicate-stores_the_results_in_a_document_store",
      "Entity-document_store"
    ],
    [
      "Entity-mel",
      "Predicate-is_presented_in",
      "Entity-table_1"
    ],
    [
      "Entity-mel",
      "Predicate-defines",
      "Entity-configuration_json_file"
    ],
    [
      "Entity-the_supported_file_type",
      "Predicate-are_presented_in",
      "Entity-table_2"
    ],
    [
      "Entity-whilst_the_fourth_column_show",
      "Predicate-shows",
      "Entity-the_average_of_the_extracted_attribute_from_four_use_case_document_set"
    ],
    [
      "Entity-.docm",
      "Predicate-can_only_be_processed_by",
      "Entity-window"
    ],
    [
      "Entity-mel",
      "Predicate-uses_for",
      "Entity-ole_2_file_type"
    ],
    [
      "Entity-mel",
      "Predicate-is_fully_integrated_with",
      "Entity-tnnt"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-implemented_in",
      "Entity-mel"
    ],
    [
      "Entity-mel",
      "Predicate-optionally_uses",
      "Entity-nlnz_metadata_extractor_tool"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-is_presented_in",
      "Entity-figure_2"
    ],
    [
      "Entity-file_type",
      "Predicate-has",
      "Entity-processing_model"
    ],
    [
      "Entity-each_file_type",
      "Predicate-has",
      "Entity-it_own_specific_processing_model"
    ],
    [
      "Entity-apache_tika",
      "Predicate-is",
      "Entity-the_most_comprehensive_and_current_state-of-the-art_tool_for_content_extraction_and_analysis"
    ],
    [
      "Entity-apache_tika",
      "Predicate-be",
      "Entity-a_complete_and_complex_java-based_general-purpose_system"
    ],
    [
      "Entity-heterogeneous_file_set",
      "Predicate-contains",
      "Entity-content-based_information"
    ],
    [
      "Entity-agrif",
      "Predicate-has_been_tested_over",
      "Entity-document"
    ],
    [
      "Entity-mel_s",
      "Predicate-make_the_extracted_metadata",
      "Entity-rdf_ready"
    ],
    [
      "Entity-this",
      "Predicate-will_be_explored_in",
      "Entity-the_near_future"
    ],
    [
      "Entity-kgcp_task",
      "Predicate-support",
      "Entity-file_format"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-meltnnt"
    ],
    [
      "Entity-meltnnt",
      "Predicate-generates",
      "Entity-the_metadata"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-implements",
      "Entity-meltnnt"
    ],
    [
      "Entity-meltnnt",
      "Predicate-consists_of",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-is_implemented_by",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-can_assist",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-presents",
      "Entity-this_paper"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_s",
      "Predicate-developed_by",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-implements",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-is_implemented_by",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-is_compared_to",
      "Entity-mel_a_compared_to_apache_tika"
    ],
    [
      "Entity-it_(1)",
      "Predicate-is_implemented_by",
      "Entity-meltnnt"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-is_implemented_by",
      "Entity-it_(1)"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-supports",
      "Entity-it_(1)"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-assists",
      "Entity-it_(1)"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-it_(1)"
    ],
    [
      "Entity-it_(1)",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_s",
      "Predicate-is_implemented_by",
      "Entity-it_(1)"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-implements",
      "Entity-it_(1)"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-is_used_by",
      "Entity-it_(1)"
    ],
    [
      "Entity-json_file_with_the_extracted_metadata_and_text_content",
      "Predicate-generates",
      "Entity-it_(1)"
    ],
    [
      "Entity-it_(2)",
      "Predicate-is",
      "Entity-it_(1)"
    ],
    [
      "Entity-mel_a_compared_to_apache_tika",
      "Predicate-is_compared_to",
      "Entity-it_(1)"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-can_be_applied_to_extract",
      "Entity-meltnnt"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-can_assist",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type"
    ],
    [
      "Entity-mel_s",
      "Predicate-supports",
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-implement",
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-can_be_applied_to_extract",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-meltnnt",
      "Predicate-assists",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-the_metadata",
      "Predicate-6",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-mel_s",
      "Predicate-assists",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-assists",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-assists_in",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-the_metadata"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-implements",
      "Entity-the_metadata"
    ],
    [
      "Entity-meltnnt",
      "Predicate-is_part_of",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-it_(1)",
      "Predicate-is",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-supports",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-assists",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-the_metadata",
      "Predicate-generates",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-mel_s",
      "Predicate-develops",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "Predicate-uses",
      "Entity-the_set_of_python-based_method"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "Predicate-uses",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-it_(2)",
      "Predicate-is",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-mel_a_compared_to_apache_tika",
      "Predicate-compared_to",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-meltnnt",
      "Predicate-consists_of",
      "Entity-mel_s"
    ],
    [
      "Entity-mel_s",
      "Predicate-presents",
      "Entity-this_paper"
    ],
    [
      "Entity-mel_s",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_s",
      "Predicate-uses",
      "Entity-the_set_of_python-based_method"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-the_set_of_python-based_method"
    ],
    [
      "Entity-meltnnt",
      "Predicate-is_part_of",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-presents",
      "Entity-this_paper"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-uses",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-meltnnt",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-assists_in",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-the_metadata",
      "Predicate-contains",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-mel_s",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-mel_a_compared_to_apache_tika",
      "Predicate-compared_to",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-it_(2)",
      "Predicate-is_implemented_by",
      "Entity-meltnnt"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-is_implemented_by",
      "Entity-it_(2)"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-can_be_applied_to_extract",
      "Entity-it_(2)"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-assists",
      "Entity-it_(2)"
    ],
    [
      "Entity-it_(2)",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_s",
      "Predicate-is_implemented_by",
      "Entity-it_(2)"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-implements",
      "Entity-it_(2)"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-is_implemented_by",
      "Entity-it_(2)"
    ],
    [
      "Entity-json_file_with_the_extracted_metadata_and_text_content",
      "Predicate-generates",
      "Entity-it_(2)"
    ],
    [
      "Entity-mel_a_compared_to_apache_tika",
      "Predicate-compared_to",
      "Entity-it_(2)"
    ],
    [
      "Entity-meltnnt",
      "Predicate-is_compared_to",
      "Entity-mel_a_compared_to_apache_tika"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-is_a_lightweight_alternative",
      "Entity-mel_a_compared_to_apache_tika"
    ],
    [
      "Entity-mel_a_compared_to_apache_tika",
      "Predicate-compared_to",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-mel_a_compared_to_apache_tika",
      "Predicate-assists_in",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-mel_a_compared_to_apache_tika",
      "Predicate-compares",
      "Entity-this_paper"
    ],
    [
      "Entity-mel_a_compared_to_apache_tika",
      "Predicate-compares",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_s",
      "Predicate-compared_to",
      "Entity-mel_a_compared_to_apache_tika"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-implements",
      "Entity-mel_a_compared_to_apache_tika"
    ],
    [
      "Entity-mel_a_compared_to_apache_tika",
      "Predicate-compared_to",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ]
  ],
  "triples_typing": [
    [
      "Entity-pattern_matching_and_keyword_extraction",
      "skos:broader",
      "Entity-keyword_extraction"
    ],
    [
      "Entity-unstructured_information",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-tnnt",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_average_of_the_extracted_attribute_from_four_use_case_document_set",
      "skos:broader",
      "Entity-document"
    ],
    [
      "Entity-common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-apache_tika",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-content-based_information_extraction_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-json_result",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-kgcp",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-it_own_specific_processing_model",
      "skos:broader",
      "Entity-processing_model"
    ],
    [
      "Entity-xml_output",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-meltnnt",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-source_document_format",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-tnnt",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-json",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-agrif",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-kgcps__such_a_the_one_described_in__6____2___and__3_",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-xml_output",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-configuration_json_file",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-it_(1)",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-configuration_json_file",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "skos:broader",
      "Entity-metadata"
    ],
    [
      "Entity-tool",
      "skos:broader",
      "Entity-content_extraction_and_analysis"
    ],
    [
      "Entity-content-based_information_extraction_task",
      "skos:broader",
      "Entity-metadata_and_content_extraction"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "skos:broader",
      "Entity-pre-processing_task"
    ],
    [
      "Entity-json-ld_annotation",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-j2rm__4_",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-metadata_extraction_of_common_file_format",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-metadata_and_content_extraction",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-.docm",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-pre-processing_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-kgcp_task",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-text_analysis",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_result",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-file_format_a_json_object",
      "skos:broader",
      "Entity-json_structure"
    ],
    [
      "Entity-there_is_a_wide_range_of_python-based_tool",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-file_type",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-text_analysis",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-json-ld_annotation",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-in_order_to_support_kgcp_task",
      "skos:broader",
      "Entity-kgcp_task"
    ],
    [
      "Entity-json_structure",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-metadata",
      "skos:broader",
      "Entity-content-based_information"
    ],
    [
      "Entity-heterogeneous_file_set",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-mel",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-kgcp",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_",
      "skos:broader",
      "Entity-text_analysis"
    ],
    [
      "Entity-input_document_set",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-meltnnt",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-the_metadata",
      "skos:broader",
      "Entity-metadata"
    ],
    [
      "Entity-in_order_to_support_kgcp_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-more_than_20_different_file_type",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-nlnz_metadata_extractor_tool",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-a_document_store",
      "skos:broader",
      "Entity-document_store"
    ],
    [
      "Entity-pattern_matching_and_keyword_extraction",
      "skos:broader",
      "Entity-content_extraction_and_analysis"
    ],
    [
      "Entity-json_file",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-a_project",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-the_content_and_metadata_of_all_supported_file_type",
      "skos:broader",
      "Entity-metadata"
    ],
    [
      "Entity-common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type",
      "skos:broader",
      "Entity-json"
    ],
    [
      "Entity-these_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-json_file",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-content-based_information_extraction_task",
      "skos:broader",
      "Entity-content_extraction_and_analysis"
    ],
    [
      "Entity-the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type",
      "skos:broader",
      "Entity-document_type"
    ],
    [
      "Entity-the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-basic_text_analysis__such_a_applying_a_configurable_set_of_regular_expression_and_keyword_extraction_task_",
      "skos:broader",
      "Entity-text_analysis"
    ],
    [
      "Entity-each_document",
      "skos:broader",
      "Entity-source_document"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-pre-processing_and_data_cleaning_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-apache_tika",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-each_document",
      "skos:broader",
      "Entity-document"
    ],
    [
      "Entity-primitive",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-source_document",
      "skos:broader",
      "Entity-document"
    ],
    [
      "Entity-ole",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-mel",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type",
      "skos:broader",
      "Entity-json_object"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "skos:broader",
      "Entity-pre-processing_and_data_cleaning_task"
    ],
    [
      "Entity-regular_expression",
      "skos:broader",
      "Entity-text_analysis"
    ],
    [
      "Entity-vocabulary_or_light-weight_ontology",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-ole_2_file_type",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-nlp_tool_and_ner_model",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-content-based_information",
      "skos:broader",
      "Entity-text_analysis"
    ],
    [
      "Entity-it_(2)",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-file_format_a_json_object",
      "skos:broader",
      "Entity-json"
    ],
    [
      "Entity-ole",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-more_file_format",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-each_file_type",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-regular_expression",
      "skos:broader",
      "Entity-pattern_matching"
    ],
    [
      "Entity-mel",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type",
      "skos:broader",
      "Entity-document"
    ],
    [
      "Entity-proper_tool_that_integrate_several_complementary_extraction_method_and_property_to_get_a_rich_output_set",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-the_tnnt_result",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-text_analysis_task",
      "skos:broader",
      "Entity-content_extraction_and_analysis"
    ],
    [
      "Entity-keyword_extraction",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-json-ld",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-the_supported_file_type",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-pattern_matching_and_keyword_extraction",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-kgcp",
      "skos:broader",
      "Entity-knowledge_graph_construction_pipeline"
    ],
    [
      "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-file_format_a_json_object",
      "skos:broader",
      "Entity-json_object"
    ],
    [
      "Entity-kgcp_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-mel",
      "skos:broader",
      "Entity-metadata_and_content_extraction"
    ],
    [
      "Entity-the_average_of_the_extracted_attribute_from_four_use_case_document_set",
      "skos:broader",
      "Entity-source_document"
    ],
    [
      "Entity-j2rm",
      "skos:broader",
      "Entity-tool"
    ]
  ],
  "predicates": {
    "Predicate-presents": {
      "label": "presents",
      "description": "The predicate 'presents' indicates the act of introducing or making available something (the object) through a medium or representation (typically embodied by the subject).",
      "disambiguation_index": 0
    },
    "Predicate-are_generated_as": {
      "label": "are generated as",
      "description": "This predicate indicates a transformation or conversion process that produces an object from one or more subjects. The subject(s) undergo some kind of processing, analysis, or manipulation to yield the resulting object.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_mapped_to": {
      "label": "can be mapped to",
      "description": "Indicates that there exists a transformation or correspondence between two entities (subject and object), allowing for the representation, conversion, or translation of one into another. This predicate suggests an equivalence or similarity relationship between the subject and object, enabling their connection through some mapping process.",
      "disambiguation_index": 0
    },
    "Predicate-supports": {
      "label": "supports",
      "description": "The predicate 'supports' indicates that the subject has a capacity to accommodate or facilitate the object. In general, it suggests an enabling or facilitating relationship between the subject and the object.",
      "disambiguation_index": 0
    },
    "Predicate-introduces": {
      "label": "introduces",
      "description": "Introduces refers to the act of presenting or bringing forth information, concepts, ideas, or entities for consideration, discussion, or understanding. It connects a subject (typically an author, creator, or source) with an object that represents new knowledge, insights, perspectives, or representations.",
      "disambiguation_index": 0
    },
    "Predicate-performs": {
      "label": "performs",
      "description": "The predicate 'performs' indicates that an action or set of actions are carried out by the subject on behalf of the object. It implies a sense of agency and execution, suggesting that the subject takes responsibility for completing tasks related to the object.",
      "disambiguation_index": 0
    },
    "Predicate-and": {
      "label": "and",
      "description": "The predicate 'and' indicates a logical conjunction or combination of two concepts. It connects the subject (e.g., pattern matching) with an object (e.g., keyword extraction), suggesting that these two ideas are related, equivalent, or complementary in some way.",
      "disambiguation_index": 0
    },
    "Predicate-generates": {
      "label": "generates",
      "description": "The predicate 'generates' indicates a relationship where the subject produces or creates something new, often in response to an input or stimulus. The object represents the outcome or result of this generation process.",
      "disambiguation_index": 0
    },
    "Predicate-implements": {
      "label": "implements",
      "description": "The predicate 'implements' indicates that the subject (in this case, MEL) provides or uses a specific mechanism, framework, protocol, or set of rules to achieve a particular goal or functionality. The object represents the thing being implemented, which can be a system, process, standard, or methodology.",
      "disambiguation_index": 0
    },
    "Predicate-developed_in_conjunction_with": {
      "label": "developed in conjunction with",
      "description": "Indicates a collaborative effort or partnership between two entities (subject and object), where the subject has contributed to or been involved in the development of something related to the object, often implying mutual influence or co-creation.",
      "disambiguation_index": 0
    },
    "Predicate-has": {
      "label": "has",
      "description": "The predicate 'has' indicates a possession or association relationship between the subject and object. It suggests that the subject possesses, owns, or is characterized by the quality or attribute described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-takes": {
      "label": "takes",
      "description": "The predicate 'takes' indicates a relationship of possession or acquisition between the subject and object. It suggests that the subject has obtained, received, or holds onto something specified by the object.",
      "disambiguation_index": 0
    },
    "Predicate-extracts": {
      "label": "extracts",
      "description": "The predicate 'extracts' indicates a process of identifying and isolating relevant or important aspects from a given source (subject), resulting in the formation of new knowledge, insights, or information (object).",
      "disambiguation_index": 0
    },
    "Predicate-takes_as_input_a_document_set": {
      "label": "takes as input a document set",
      "description": "The predicate 'takes as input a document set' indicates that the subject entity processes or utilizes a collection of documents. The object represents this document set, which can be used to perform some specific task or function.",
      "disambiguation_index": 0
    },
    "Predicate-can_store": {
      "label": "can store",
      "description": "The predicate 'can store' indicates that the subject has the ability or capacity to retain or hold onto something (the object), often referring to physical or abstract entities, such as objects, data, information, or results.",
      "disambiguation_index": 0
    },
    "Predicate-store": {
      "label": "store",
      "description": "To store means to keep or maintain something in a location for future use or access. The predicate 'store' connects the subject (the entity performing the action of storing) with an object that represents the thing being stored, such as a physical space, digital repository, or abstract concept.",
      "disambiguation_index": 0
    },
    "Predicate-stores_the_results_in_a_document_store": {
      "label": "stores the results in a document store",
      "description": "This predicate indicates that the subject takes some action or holds onto something (the 'results') and places it into a designated storage location called a 'document store'. The connection between the subject and object is one of containment, where the results are being held within the document store.",
      "disambiguation_index": 0
    },
    "Predicate-is_presented_in": {
      "label": "is presented in",
      "description": "The predicate 'is presented in' indicates a relationship where the subject (in this case, MEL) has its contents or information displayed within or contained by the object (Table 1). This can imply that Table 1 serves as a medium for presenting or showcasing the details of MEL.",
      "disambiguation_index": 0
    },
    "Predicate-defines": {
      "label": "defines",
      "description": "The predicate 'defines' indicates a relationship where the subject provides a clear and explicit explanation or specification of the object. This connection implies that the subject has authority, expertise, or control over the definition of the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_presented_in": {
      "label": "are presented in",
      "description": "This predicate indicates a relationship where information or data about something (the subject) is displayed or organized within a specific context or medium (the object). The connection between the subject and object suggests that the former is being presented in a particular way, often for ease of understanding or reference.",
      "disambiguation_index": 0
    },
    "Predicate-shows": {
      "label": "shows",
      "description": "The predicate 'shows' indicates a relationship where the subject represents or demonstrates something about the object. This can include revealing, illustrating, or making explicit information that was previously implicit.",
      "disambiguation_index": 0
    },
    "Predicate-can_only_be_processed_by": {
      "label": "can only be processed by",
      "description": "This predicate indicates that a specific entity (subject) requires or is compatible with a particular processing system or tool (object), implying exclusivity and inability to be processed by any other means.",
      "disambiguation_index": 0
    },
    "Predicate-uses_for": {
      "label": "uses for",
      "description": "The predicate 'uses for' indicates a relationship between a subject and an object where the subject has a specific purpose or function related to the object. In general, this predicate suggests that the subject utilizes or employs the object for a particular reason.",
      "disambiguation_index": 0
    },
    "Predicate-is_fully_integrated_with": {
      "label": "is fully integrated with",
      "description": "Indicates a state of unity or cohesion between two entities (subject and object), suggesting that they share resources, capabilities, or goals to achieve a common objective. This predicate implies a high level of coordination, cooperation, and mutual understanding.",
      "disambiguation_index": 0
    },
    "Predicate-implemented_in": {
      "label": "implemented in",
      "description": "Indicates that a particular entity (the subject) has its functionality or characteristics defined by another entity (the object). The predicate 'implemented in' suggests a relationship of specification, where the subject's properties are determined by the object. In general, this predicate connects the subject to an underlying framework, programming language, toolset, or methodology that enables or defines the subject's behavior.",
      "disambiguation_index": 0
    },
    "Predicate-optionally_uses": {
      "label": "optionally uses",
      "description": "The predicate 'optionally uses' indicates that the subject has a relationship with the object where it may or may not employ the object's functionality, resources, or services. This connection suggests that the subject can choose to utilize the object as needed, but is not necessarily dependent on it.",
      "disambiguation_index": 0
    },
    "Predicate-is": {
      "label": "is",
      "description": "The predicate 'is' indicates a statement of identity or equivalence between the subject and object, suggesting that they share a common characteristic, property, or attribute. It implies a sense of sameness or similarity between the two entities.",
      "disambiguation_index": 0
    },
    "Predicate-be": {
      "label": "be",
      "description": "The predicate 'be' connects the subject to an attribute or characteristic that defines its nature, essence, or identity. It establishes a state of being between the subject and object, indicating that the subject possesses or embodies the quality described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-contains": {
      "label": "contains",
      "description": "The predicate 'contains' indicates a relationship where the subject has or includes the object as part of its composition. This can imply possession, membership, or incorporation of the object within the subject.",
      "disambiguation_index": 0
    },
    "Predicate-has_been_tested_over": {
      "label": "has been tested over",
      "description": "Indicates that a subject (e.g. an entity or system) has undergone testing or evaluation on a specific object (e.g. data, content), suggesting a relationship of scrutiny and assessment.",
      "disambiguation_index": 0
    },
    "Predicate-make_the_extracted_metadata": {
      "label": "make the extracted metadata",
      "description": "To transform or process the extracted metadata into a specific format or structure that enables its use in a particular context.",
      "disambiguation_index": 0
    },
    "Predicate-will_be_explored_in": {
      "label": "will be explored in",
      "description": "The predicate 'will be explored in' indicates a temporal and spatial relationship between the subject and object. It suggests that the subject (This) will engage with or delve into the object (the near future), likely to gain insight, understand, or make progress on something.",
      "disambiguation_index": 0
    },
    "Predicate-support": {
      "label": "support",
      "description": "To provide assistance or backing to something, often implying a sense of endorsement, validation, or facilitation. The predicate 'support' connects the subject and object by indicating that the former provides resources, guidance, or approval for the latter.",
      "disambiguation_index": 0
    },
    "Predicate-consists_of": {
      "label": "consists_of",
      "description": "The predicate 'consists_of' indicates that the subject is composed of or made up of one or more objects. It implies a part-whole relationship, where the subject is considered to be comprised of the object(s) listed.",
      "disambiguation_index": 0
    },
    "Predicate-is_implemented_by": {
      "label": "is implemented by",
      "description": "The predicate 'is implemented by' indicates that the subject (a system, process, or entity) relies on or utilizes the object (another system, process, or entity) to accomplish a specific task or function.",
      "disambiguation_index": 0
    },
    "Predicate-can_assist": {
      "label": "can assist",
      "description": "The predicate 'can assist' indicates that the subject has the capability or ability to offer support, guidance, or resources to help achieve a specific goal or complete a task. The object represents the entity, process, or activity that can benefit from this assistance.",
      "disambiguation_index": 0
    },
    "Predicate-developed_by": {
      "label": "developed by",
      "description": "The predicate 'developed by' indicates that the subject has been created or produced by the object. It implies a relationship of origin or authorship, suggesting that the object played a role in shaping or bringing into existence the subject.",
      "disambiguation_index": 0
    },
    "Predicate-is_compared_to": {
      "label": "is compared to",
      "description": "The predicate 'is compared to' indicates that the subject and object are being evaluated or analyzed with respect to each other. It suggests a comparison, analogy, or equivalence between two entities, concepts, or systems.",
      "disambiguation_index": 0
    },
    "Predicate-assists": {
      "label": "assists",
      "description": "The predicate 'assists' indicates that the subject provides support or aid to achieve a specific goal or task described by the object. It implies a helping relationship between the subject and the context specified in the object, where the subject's action enables or facilitates the accomplishment of something.",
      "disambiguation_index": 0
    },
    "Predicate-is_used_by": {
      "label": "is used by",
      "description": "The predicate 'is used by' indicates a relationship between two entities where one entity (the subject) has its purpose or function fulfilled by another entity (the object). In general, this predicate suggests that the subject relies on or utilizes the services of the object to achieve its intended goal.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_applied_to_extract": {
      "label": "can be applied to extract",
      "description": "This predicate indicates that a process or method (subject) has the capability to utilize another entity (object) for extracting specific information. The subject can leverage the object's capabilities to extract relevant data, which may involve processing, analyzing, or transforming the input in some way.",
      "disambiguation_index": 0
    },
    "Predicate-implement": {
      "label": "implement",
      "description": "To implement means to put into effect or bring into practice a plan, method, system, or idea. It involves making something operational, functional, and usable by applying the necessary resources, skills, and knowledge.",
      "disambiguation_index": 0
    },
    "Predicate-6": {
      "label": "6",
      "description": "A reference to a citation or bibliographic entry that provides additional information or context.",
      "disambiguation_index": 0
    },
    "Predicate-assists_in": {
      "label": "assists in",
      "description": "The predicate 'assists in' indicates that the subject (an entity or process) provides support or aid to achieve a specific task, stage, or activity denoted by the object. In general, it describes an enabling role where the subject facilitates or helps with the accomplishment of something.",
      "disambiguation_index": 0
    },
    "Predicate-is_part_of": {
      "label": "is part of",
      "description": "The predicate 'is part of' indicates a relationship where the subject is an integral component or element within the object, suggesting that the subject plays a significant role or has a defined position within the larger structure or system represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-develops": {
      "label": "develops",
      "description": "The predicate 'develops' indicates the process of creating or refining something, often implying a sense of growth, improvement, or maturation. It connects the subject to an object that has undergone or will undergo development, highlighting the transformation from one state to another.",
      "disambiguation_index": 0
    },
    "Predicate-uses": {
      "label": "uses",
      "description": "The predicate 'uses' indicates that the subject entity employs or utilizes the object entity to achieve a specific purpose or function.",
      "disambiguation_index": 0
    },
    "Predicate-compared_to": {
      "label": "compared_to",
      "description": "The predicate 'compared_to' indicates a relationship between two entities, where one entity (the subject) is compared or contrasted with another entity (the object), highlighting their similarities and/or differences.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_lightweight_alternative": {
      "label": "<is a lightweight alternative>",
      "description": "This predicate indicates that the subject is a less resource-intensive or more efficient version of the object. It implies a comparison between two entities, suggesting that the subject offers similar functionality to the object but with reduced complexity, processing power, or other system requirements.",
      "disambiguation_index": 0
    },
    "Predicate-compares": {
      "label": "compares",
      "description": "The predicate 'compares' indicates a relationship of similarity or equivalence between two entities (subject and object), where the subject is being compared to the object, often with the intention of highlighting their differences or similarities.",
      "disambiguation_index": 0
    },
    "skos:broader": {
      "label": "has a broader term",
      "description": "Indicates that the subject concept is more specific than or equivalent to the object concept. The predicate 'has a broader term' establishes a hierarchical relationship between two concepts, where the subject represents a narrower or more specialized term and the object represents a broader or more general term.",
      "disambiguation_index": 0
    }
  }
}